"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pino-pretty";
exports.ids = ["vendor-chunks/pino-pretty"];
exports.modules = {

/***/ "(ssr)/./node_modules/pino-pretty/index.js":
/*!*******************************************!*\
  !*** ./node_modules/pino-pretty/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { isColorSupported } = __webpack_require__(/*! colorette */ \"(ssr)/./node_modules/colorette/index.cjs\")\nconst pump = __webpack_require__(/*! pump */ \"(ssr)/./node_modules/pump/index.js\")\nconst { Transform } = __webpack_require__(/*! stream */ \"stream\")\nconst abstractTransport = __webpack_require__(/*! pino-abstract-transport */ \"(ssr)/./node_modules/pino-abstract-transport/index.js\")\nconst colors = __webpack_require__(/*! ./lib/colors */ \"(ssr)/./node_modules/pino-pretty/lib/colors.js\")\nconst {\n  ERROR_LIKE_KEYS,\n  LEVEL_KEY,\n  LEVEL_LABEL,\n  MESSAGE_KEY,\n  TIMESTAMP_KEY\n} = __webpack_require__(/*! ./lib/constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\nconst {\n  buildSafeSonicBoom,\n  parseFactoryOptions\n} = __webpack_require__(/*! ./lib/utils */ \"(ssr)/./node_modules/pino-pretty/lib/utils/index.js\")\nconst pretty = __webpack_require__(/*! ./lib/pretty */ \"(ssr)/./node_modules/pino-pretty/lib/pretty.js\")\n\n/**\n * @typedef {object} PinoPrettyOptions\n * @property {boolean} [colorize] Indicates if colors should be used when\n * prettifying. The default will be determined by the terminal capabilities at\n * run time.\n * @property {boolean} [colorizeObjects=true] Apply coloring to rendered objects\n * when coloring is enabled.\n * @property {boolean} [crlf=false] End lines with `\\r\\n` instead of `\\n`.\n * @property {string|null} [customColors=null] A comma separated list of colors\n * to use for specific level labels, e.g. `err:red,info:blue`.\n * @property {string|null} [customLevels=null] A comma separated list of user\n * defined level names and numbers, e.g. `err:99,info:1`.\n * @property {CustomPrettifiers} [customPrettifiers={}] A set of prettifier\n * functions to apply to keys defined in this object.\n * @property {K_ERROR_LIKE_KEYS} [errorLikeObjectKeys] A list of string property\n * names to consider as error objects.\n * @property {string} [errorProps=''] A comma separated list of properties on\n * error objects to include in the output.\n * @property {boolean} [hideObject=false] When `true`, data objects will be\n * omitted from the output (except for error objects).\n * @property {string} [ignore='hostname'] A comma separated list of log keys\n * to omit when outputting the prettified log information.\n * @property {undefined|string} [include=undefined] A comma separated list of\n * log keys to include in the prettified log information. Only the keys in this\n * list will be included in the output.\n * @property {boolean} [levelFirst=false] When true, the log level will be the\n * first field in the prettified output.\n * @property {string} [levelKey='level'] The key name in the log data that\n * contains the level value for the log.\n * @property {string} [levelLabel='levelLabel'] Token name to use in\n * `messageFormat` to represent the name of the logged level.\n * @property {null|MessageFormatString|MessageFormatFunction} [messageFormat=null]\n * When a string, defines how the prettified line should be formatted according\n * to defined tokens. When a function, a synchronous function that returns a\n * formatted string.\n * @property {string} [messageKey='msg'] Defines the key in incoming logs that\n * contains the message of the log, if present.\n * @property {undefined|string|number} [minimumLevel=undefined] The minimum\n * level for logs that should be processed. Any logs below this level will\n * be omitted.\n * @property {object} [outputStream=process.stdout] The stream to write\n * prettified log lines to.\n * @property {boolean} [singleLine=false] When `true` any objects, except error\n * objects, in the log data will be printed as a single line instead as multiple\n * lines.\n * @property {string} [timestampKey='time'] Defines the key in incoming logs\n * that contains the timestamp of the log, if present.\n * @property {boolean|string} [translateTime=true] When true, will translate a\n * JavaScript date integer into a human-readable string. If set to a string,\n * it must be a format string.\n * @property {boolean} [useOnlyCustomProps=true] When true, only custom levels\n * and colors will be used if they have been provided.\n */\n\n/**\n * The default options that will be used when prettifying log lines.\n *\n * @type {PinoPrettyOptions}\n */\nconst defaultOptions = {\n  colorize: isColorSupported,\n  colorizeObjects: true,\n  crlf: false,\n  customColors: null,\n  customLevels: null,\n  customPrettifiers: {},\n  errorLikeObjectKeys: ERROR_LIKE_KEYS,\n  errorProps: '',\n  hideObject: false,\n  ignore: 'hostname',\n  include: undefined,\n  levelFirst: false,\n  levelKey: LEVEL_KEY,\n  levelLabel: LEVEL_LABEL,\n  messageFormat: null,\n  messageKey: MESSAGE_KEY,\n  minimumLevel: undefined,\n  outputStream: process.stdout,\n  singleLine: false,\n  timestampKey: TIMESTAMP_KEY,\n  translateTime: true,\n  useOnlyCustomProps: true\n}\n\n/**\n * Processes the supplied options and returns a function that accepts log data\n * and produces a prettified log string.\n *\n * @param {PinoPrettyOptions} options Configuration for the prettifier.\n * @returns {LogPrettifierFunc}\n */\nfunction prettyFactory (options) {\n  const context = parseFactoryOptions(Object.assign({}, defaultOptions, options))\n  return pretty.bind({ ...context, context })\n}\n\n/**\n * @typedef {PinoPrettyOptions} BuildStreamOpts\n * @property {object|number|string} [destination] A destination stream, file\n * descriptor, or target path to a file.\n * @property {boolean} [append]\n * @property {boolean} [mkdir]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Constructs a {@link LogPrettifierFunc} and a stream to which the produced\n * prettified log data will be written.\n *\n * @param {BuildStreamOpts} opts\n * @returns {Transform | (Transform & OnUnknown)}\n */\nfunction build (opts = {}) {\n  let pretty = prettyFactory(opts)\n  let destination\n  return abstractTransport(function (source) {\n    source.on('message', function pinoConfigListener (message) {\n      if (!message || message.code !== 'PINO_CONFIG') return\n      Object.assign(opts, {\n        messageKey: message.config.messageKey,\n        errorLikeObjectKeys: Array.from(new Set([...(opts.errorLikeObjectKeys || ERROR_LIKE_KEYS), message.config.errorKey])),\n        customLevels: message.config.levels.values\n      })\n      pretty = prettyFactory(opts)\n      source.off('message', pinoConfigListener)\n    })\n    const stream = new Transform({\n      objectMode: true,\n      autoDestroy: true,\n      transform (chunk, enc, cb) {\n        const line = pretty(chunk)\n        cb(null, line)\n      }\n    })\n\n    if (typeof opts.destination === 'object' && typeof opts.destination.write === 'function') {\n      destination = opts.destination\n    } else {\n      destination = buildSafeSonicBoom({\n        dest: opts.destination || 1,\n        append: opts.append,\n        mkdir: opts.mkdir,\n        sync: opts.sync // by default sonic will be async\n      })\n    }\n\n    source.on('unknown', function (line) {\n      destination.write(line + '\\n')\n    })\n\n    pump(source, stream, destination)\n    return stream\n  }, {\n    parse: 'lines',\n    close (err, cb) {\n      destination.on('close', () => {\n        cb(err)\n      })\n    }\n  })\n}\n\nmodule.exports = build\nmodule.exports.build = build\nmodule.exports.PinoPretty = build\nmodule.exports.prettyFactory = prettyFactory\nmodule.exports.colorizerFactory = colors\nmodule.exports.isColorSupported = isColorSupported\nmodule.exports[\"default\"] = build\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/colors.js":
/*!************************************************!*\
  !*** ./node_modules/pino-pretty/lib/colors.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst nocolor = input => input\nconst plain = {\n  default: nocolor,\n  60: nocolor,\n  50: nocolor,\n  40: nocolor,\n  30: nocolor,\n  20: nocolor,\n  10: nocolor,\n  message: nocolor,\n  greyMessage: nocolor\n}\n\nconst { createColors } = __webpack_require__(/*! colorette */ \"(ssr)/./node_modules/colorette/index.cjs\")\nconst getLevelLabelData = __webpack_require__(/*! ./utils/get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\nconst availableColors = createColors({ useColor: true })\nconst { white, bgRed, red, yellow, green, blue, gray, cyan } = availableColors\n\nconst colored = {\n  default: white,\n  60: bgRed,\n  50: red,\n  40: yellow,\n  30: green,\n  20: blue,\n  10: gray,\n  message: cyan,\n  greyMessage: gray\n}\n\nfunction resolveCustomColoredColorizer (customColors) {\n  return customColors.reduce(\n    function (agg, [level, color]) {\n      agg[level] = typeof availableColors[color] === 'function' ? availableColors[color] : white\n\n      return agg\n    },\n    { default: white, message: cyan, greyMessage: gray }\n  )\n}\n\nfunction colorizeLevel (useOnlyCustomProps) {\n  return function (level, colorizer, { customLevels, customLevelNames } = {}) {\n    const [levelStr, levelNum] = getLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)(level)\n\n    return Object.prototype.hasOwnProperty.call(colorizer, levelNum) ? colorizer[levelNum](levelStr) : colorizer.default(levelStr)\n  }\n}\n\nfunction plainColorizer (useOnlyCustomProps) {\n  const newPlainColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newPlainColorizer(level, plain, opts)\n  }\n  customColoredColorizer.message = plain.message\n  customColoredColorizer.greyMessage = plain.greyMessage\n  customColoredColorizer.colors = createColors({ useColor: false })\n  return customColoredColorizer\n}\n\nfunction coloredColorizer (useOnlyCustomProps) {\n  const newColoredColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newColoredColorizer(level, colored, opts)\n  }\n  customColoredColorizer.message = colored.message\n  customColoredColorizer.greyMessage = colored.greyMessage\n  customColoredColorizer.colors = availableColors\n  return customColoredColorizer\n}\n\nfunction customColoredColorizerFactory (customColors, useOnlyCustomProps) {\n  const onlyCustomColored = resolveCustomColoredColorizer(customColors)\n  const customColored = useOnlyCustomProps ? onlyCustomColored : Object.assign({}, colored, onlyCustomColored)\n  const colorizeLevelCustom = colorizeLevel(useOnlyCustomProps)\n\n  const customColoredColorizer = function (level, opts) {\n    return colorizeLevelCustom(level, customColored, opts)\n  }\n  customColoredColorizer.colors = availableColors\n  customColoredColorizer.message = customColoredColorizer.message || customColored.message\n  customColoredColorizer.greyMessage = customColoredColorizer.greyMessage || customColored.greyMessage\n\n  return customColoredColorizer\n}\n\n/**\n * Applies colorization, if possible, to a string representing the passed in\n * `level`. For example, the default colorizer will return a \"green\" colored\n * string for the \"info\" level.\n *\n * @typedef {function} ColorizerFunc\n * @param {string|number} level In either case, the input will map to a color\n * for the specified level or to the color for `USERLVL` if the level is not\n * recognized.\n * @property {function} message Accepts one string parameter that will be\n * colorized to a predefined color.\n * @property {Colorette.Colorette} colors Available color functions based on `useColor` (or `colorize`) context\n */\n\n/**\n * Factory function get a function to colorized levels. The returned function\n * also includes a `.message(str)` method to colorize strings.\n *\n * @param {boolean} [useColors=false] When `true` a function that applies standard\n * terminal colors is returned.\n * @param {array[]} [customColors] Tuple where first item of each array is the\n * level index and the second item is the color\n * @param {boolean} [useOnlyCustomProps] When `true`, only use the provided\n * custom colors provided and not fallback to default\n *\n * @returns {ColorizerFunc} `function (level) {}` has a `.message(str)` method to\n * apply colorization to a string. The core function accepts either an integer\n * `level` or a `string` level. The integer level will map to a known level\n * string or to `USERLVL` if not known.  The string `level` will map to the same\n * colors as the integer `level` and will also default to `USERLVL` if the given\n * string is not a recognized level name.\n */\nmodule.exports = function getColorizer (useColors = false, customColors, useOnlyCustomProps) {\n  if (useColors && customColors !== undefined) {\n    return customColoredColorizerFactory(customColors, useOnlyCustomProps)\n  } else if (useColors) {\n    return coloredColorizer(useOnlyCustomProps)\n  }\n\n  return plainColorizer(useOnlyCustomProps)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/colors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/constants.js":
/*!***************************************************!*\
  !*** ./node_modules/pino-pretty/lib/constants.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\n/**\n * A set of property names that indicate the value represents an error object.\n *\n * @typedef {string[]} K_ERROR_LIKE_KEYS\n */\n\nmodule.exports = {\n  DATE_FORMAT: 'yyyy-mm-dd HH:MM:ss.l o',\n  DATE_FORMAT_SIMPLE: 'HH:MM:ss.l',\n\n  /**\n   * @type {K_ERROR_LIKE_KEYS}\n   */\n  ERROR_LIKE_KEYS: ['err', 'error'],\n\n  MESSAGE_KEY: 'msg',\n\n  LEVEL_KEY: 'level',\n\n  LEVEL_LABEL: 'levelLabel',\n\n  TIMESTAMP_KEY: 'time',\n\n  LEVELS: {\n    default: 'USERLVL',\n    60: 'FATAL',\n    50: 'ERROR',\n    40: 'WARN',\n    30: 'INFO',\n    20: 'DEBUG',\n    10: 'TRACE'\n  },\n\n  LEVEL_NAMES: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n\n  // Object keys that probably came from a logger like Pino or Bunyan.\n  LOGGER_KEYS: [\n    'pid',\n    'hostname',\n    'name',\n    'level',\n    'time',\n    'timestamp',\n    'caller'\n  ]\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLyoqXG4gKiBBIHNldCBvZiBwcm9wZXJ0eSBuYW1lcyB0aGF0IGluZGljYXRlIHRoZSB2YWx1ZSByZXByZXNlbnRzIGFuIGVycm9yIG9iamVjdC5cbiAqXG4gKiBAdHlwZWRlZiB7c3RyaW5nW119IEtfRVJST1JfTElLRV9LRVlTXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIERBVEVfRk9STUFUOiAneXl5eS1tbS1kZCBISDpNTTpzcy5sIG8nLFxuICBEQVRFX0ZPUk1BVF9TSU1QTEU6ICdISDpNTTpzcy5sJyxcblxuICAvKipcbiAgICogQHR5cGUge0tfRVJST1JfTElLRV9LRVlTfVxuICAgKi9cbiAgRVJST1JfTElLRV9LRVlTOiBbJ2VycicsICdlcnJvciddLFxuXG4gIE1FU1NBR0VfS0VZOiAnbXNnJyxcblxuICBMRVZFTF9LRVk6ICdsZXZlbCcsXG5cbiAgTEVWRUxfTEFCRUw6ICdsZXZlbExhYmVsJyxcblxuICBUSU1FU1RBTVBfS0VZOiAndGltZScsXG5cbiAgTEVWRUxTOiB7XG4gICAgZGVmYXVsdDogJ1VTRVJMVkwnLFxuICAgIDYwOiAnRkFUQUwnLFxuICAgIDUwOiAnRVJST1InLFxuICAgIDQwOiAnV0FSTicsXG4gICAgMzA6ICdJTkZPJyxcbiAgICAyMDogJ0RFQlVHJyxcbiAgICAxMDogJ1RSQUNFJ1xuICB9LFxuXG4gIExFVkVMX05BTUVTOiB7XG4gICAgZmF0YWw6IDYwLFxuICAgIGVycm9yOiA1MCxcbiAgICB3YXJuOiA0MCxcbiAgICBpbmZvOiAzMCxcbiAgICBkZWJ1ZzogMjAsXG4gICAgdHJhY2U6IDEwXG4gIH0sXG5cbiAgLy8gT2JqZWN0IGtleXMgdGhhdCBwcm9iYWJseSBjYW1lIGZyb20gYSBsb2dnZXIgbGlrZSBQaW5vIG9yIEJ1bnlhbi5cbiAgTE9HR0VSX0tFWVM6IFtcbiAgICAncGlkJyxcbiAgICAnaG9zdG5hbWUnLFxuICAgICduYW1lJyxcbiAgICAnbGV2ZWwnLFxuICAgICd0aW1lJyxcbiAgICAndGltZXN0YW1wJyxcbiAgICAnY2FsbGVyJ1xuICBdXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/pretty.js":
/*!************************************************!*\
  !*** ./node_modules/pino-pretty/lib/pretty.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = pretty\n\nconst sjs = __webpack_require__(/*! secure-json-parse */ \"(ssr)/./node_modules/secure-json-parse/index.js\")\n\nconst isObject = __webpack_require__(/*! ./utils/is-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\")\nconst prettifyErrorLog = __webpack_require__(/*! ./utils/prettify-error-log */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\")\nconst prettifyLevel = __webpack_require__(/*! ./utils/prettify-level */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\")\nconst prettifyMessage = __webpack_require__(/*! ./utils/prettify-message */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\")\nconst prettifyMetadata = __webpack_require__(/*! ./utils/prettify-metadata */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\")\nconst prettifyObject = __webpack_require__(/*! ./utils/prettify-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\")\nconst prettifyTime = __webpack_require__(/*! ./utils/prettify-time */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\")\nconst filterLog = __webpack_require__(/*! ./utils/filter-log */ \"(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\")\n\nconst {\n  LEVELS,\n  LEVEL_KEY,\n  LEVEL_NAMES\n} = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst jsonParser = input => {\n  try {\n    return { value: sjs.parse(input, { protoAction: 'remove' }) }\n  } catch (err) {\n    return { err }\n  }\n}\n\n/**\n * Orchestrates processing the received log data according to the provided\n * configuration and returns a prettified log string.\n *\n * @typedef {function} LogPrettifierFunc\n * @param {string|object} inputData A log string or a log-like object.\n * @returns {string} A string that represents the prettified log data.\n */\nfunction pretty (inputData) {\n  let log\n  if (!isObject(inputData)) {\n    const parsed = jsonParser(inputData)\n    if (parsed.err || !isObject(parsed.value)) {\n      // pass through\n      return inputData + this.EOL\n    }\n    log = parsed.value\n  } else {\n    log = inputData\n  }\n\n  if (this.minimumLevel) {\n    // We need to figure out if the custom levels has the desired minimum\n    // level & use that one if found. If not, determine if the level exists\n    // in the standard levels. In both cases, make sure we have the level\n    // number instead of the level name.\n    let condition\n    if (this.useOnlyCustomProps) {\n      condition = this.customLevels\n    } else {\n      condition = this.customLevelNames[this.minimumLevel] !== undefined\n    }\n    let minimum\n    if (condition) {\n      minimum = this.customLevelNames[this.minimumLevel]\n    } else {\n      minimum = LEVEL_NAMES[this.minimumLevel]\n    }\n    if (!minimum) {\n      minimum = typeof this.minimumLevel === 'string'\n        ? LEVEL_NAMES[this.minimumLevel]\n        : LEVEL_NAMES[LEVELS[this.minimumLevel].toLowerCase()]\n    }\n\n    const level = log[this.levelKey === undefined ? LEVEL_KEY : this.levelKey]\n    if (level < minimum) return\n  }\n\n  const prettifiedMessage = prettifyMessage({ log, context: this.context })\n\n  if (this.ignoreKeys || this.includeKeys) {\n    log = filterLog({ log, context: this.context })\n  }\n\n  const prettifiedLevel = prettifyLevel({\n    log,\n    context: {\n      ...this.context,\n      // This is odd. The colorizer ends up relying on the value of\n      // `customProperties` instead of the original `customLevels` and\n      // `customLevelNames`.\n      ...this.context.customProperties\n    }\n  })\n  const prettifiedMetadata = prettifyMetadata({ log, context: this.context })\n  const prettifiedTime = prettifyTime({ log, context: this.context })\n\n  let line = ''\n  if (this.levelFirst && prettifiedLevel) {\n    line = `${prettifiedLevel}`\n  }\n\n  if (prettifiedTime && line === '') {\n    line = `${prettifiedTime}`\n  } else if (prettifiedTime) {\n    line = `${line} ${prettifiedTime}`\n  }\n\n  if (!this.levelFirst && prettifiedLevel) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedLevel}`\n    } else {\n      line = prettifiedLevel\n    }\n  }\n\n  if (prettifiedMetadata) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMetadata}:`\n    } else {\n      line = prettifiedMetadata\n    }\n  }\n\n  if (line.endsWith(':') === false && line !== '') {\n    line += ':'\n  }\n\n  if (prettifiedMessage !== undefined) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMessage}`\n    } else {\n      line = prettifiedMessage\n    }\n  }\n\n  if (line.length > 0 && !this.singleLine) {\n    line += this.EOL\n  }\n\n  // pino@7+ does not log this anymore\n  if (log.type === 'Error' && typeof log.stack === 'string') {\n    const prettifiedErrorLog = prettifyErrorLog({ log, context: this.context })\n    if (this.singleLine) line += this.EOL\n    line += prettifiedErrorLog\n  } else if (this.hideObject === false) {\n    const skipKeys = [\n      this.messageKey,\n      this.levelKey,\n      this.timestampKey\n    ]\n      .map((key) => key.replaceAll(/\\\\/g, ''))\n      .filter(key => {\n        return typeof log[key] === 'string' ||\n          typeof log[key] === 'number' ||\n          typeof log[key] === 'boolean'\n      })\n    const prettifiedObject = prettifyObject({\n      log,\n      skipKeys,\n      context: this.context\n    })\n\n    // In single line mode, include a space only if prettified version isn't empty\n    if (this.singleLine && !/^\\s$/.test(prettifiedObject)) {\n      line += ' '\n    }\n    line += prettifiedObject\n  }\n\n  return line\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/pretty.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js":
/*!*********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = buildSafeSonicBoom\n\nconst { isMainThread } = __webpack_require__(/*! worker_threads */ \"worker_threads\")\nconst SonicBoom = __webpack_require__(/*! sonic-boom */ \"(ssr)/./node_modules/sonic-boom/index.js\")\nconst noop = __webpack_require__(/*! ./noop */ \"(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\")\n\n/**\n * Creates a safe SonicBoom instance\n *\n * @param {object} opts Options for SonicBoom\n *\n * @returns {object} A new SonicBoom stream\n */\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // if we are sync: false, we must flush on exit\n  // NODE_V8_COVERAGE must breaks everything\n  // https://github.com/nodejs/node/issues/49344\n  if (!process.env.NODE_V8_COVERAGE && !opts.sync && isMainThread) {\n    setupOnExit(stream)\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    if (err.code === 'EPIPE') {\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n  }\n}\n\nfunction setupOnExit (stream) {\n  /* istanbul ignore next */\n  if (global.WeakRef && global.WeakMap && global.FinalizationRegistry) {\n    // This is leak free, it does not leave event handlers\n    const onExit = __webpack_require__(/*! on-exit-leak-free */ \"(ssr)/./node_modules/on-exit-leak-free/index.js\")\n\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n}\n\n/* istanbul ignore next */\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2J1aWxkLXNhZmUtc29uaWMtYm9vbS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQSxRQUFRLGVBQWUsRUFBRSxtQkFBTyxDQUFDLHNDQUFnQjtBQUNqRCxrQkFBa0IsbUJBQU8sQ0FBQyw0REFBWTtBQUN0QyxhQUFhLG1CQUFPLENBQUMsa0VBQVE7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQywwRUFBbUI7O0FBRTlDOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9idWlsZC1zYWZlLXNvbmljLWJvb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYnVpbGRTYWZlU29uaWNCb29tXG5cbmNvbnN0IHsgaXNNYWluVGhyZWFkIH0gPSByZXF1aXJlKCd3b3JrZXJfdGhyZWFkcycpXG5jb25zdCBTb25pY0Jvb20gPSByZXF1aXJlKCdzb25pYy1ib29tJylcbmNvbnN0IG5vb3AgPSByZXF1aXJlKCcuL25vb3AnKVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzYWZlIFNvbmljQm9vbSBpbnN0YW5jZVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRzIE9wdGlvbnMgZm9yIFNvbmljQm9vbVxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9IEEgbmV3IFNvbmljQm9vbSBzdHJlYW1cbiAqL1xuZnVuY3Rpb24gYnVpbGRTYWZlU29uaWNCb29tIChvcHRzKSB7XG4gIGNvbnN0IHN0cmVhbSA9IG5ldyBTb25pY0Jvb20ob3B0cylcbiAgc3RyZWFtLm9uKCdlcnJvcicsIGZpbHRlckJyb2tlblBpcGUpXG4gIC8vIGlmIHdlIGFyZSBzeW5jOiBmYWxzZSwgd2UgbXVzdCBmbHVzaCBvbiBleGl0XG4gIC8vIE5PREVfVjhfQ09WRVJBR0UgbXVzdCBicmVha3MgZXZlcnl0aGluZ1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzQ5MzQ0XG4gIGlmICghcHJvY2Vzcy5lbnYuTk9ERV9WOF9DT1ZFUkFHRSAmJiAhb3B0cy5zeW5jICYmIGlzTWFpblRocmVhZCkge1xuICAgIHNldHVwT25FeGl0KHN0cmVhbSlcbiAgfVxuICByZXR1cm4gc3RyZWFtXG5cbiAgZnVuY3Rpb24gZmlsdGVyQnJva2VuUGlwZSAoZXJyKSB7XG4gICAgaWYgKGVyci5jb2RlID09PSAnRVBJUEUnKSB7XG4gICAgICBzdHJlYW0ud3JpdGUgPSBub29wXG4gICAgICBzdHJlYW0uZW5kID0gbm9vcFxuICAgICAgc3RyZWFtLmZsdXNoU3luYyA9IG5vb3BcbiAgICAgIHN0cmVhbS5kZXN0cm95ID0gbm9vcFxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBmaWx0ZXJCcm9rZW5QaXBlKVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldHVwT25FeGl0IChzdHJlYW0pIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgaWYgKGdsb2JhbC5XZWFrUmVmICYmIGdsb2JhbC5XZWFrTWFwICYmIGdsb2JhbC5GaW5hbGl6YXRpb25SZWdpc3RyeSkge1xuICAgIC8vIFRoaXMgaXMgbGVhayBmcmVlLCBpdCBkb2VzIG5vdCBsZWF2ZSBldmVudCBoYW5kbGVyc1xuICAgIGNvbnN0IG9uRXhpdCA9IHJlcXVpcmUoJ29uLWV4aXQtbGVhay1mcmVlJylcblxuICAgIG9uRXhpdC5yZWdpc3RlcihzdHJlYW0sIGF1dG9FbmQpXG5cbiAgICBzdHJlYW0ub24oJ2Nsb3NlJywgZnVuY3Rpb24gKCkge1xuICAgICAgb25FeGl0LnVucmVnaXN0ZXIoc3RyZWFtKVxuICAgIH0pXG4gIH1cbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmZ1bmN0aW9uIGF1dG9FbmQgKHN0cmVhbSwgZXZlbnROYW1lKSB7XG4gIC8vIFRoaXMgY2hlY2sgaXMgbmVlZGVkIG9ubHkgb24gc29tZSBwbGF0Zm9ybXNcblxuICBpZiAoc3RyZWFtLmRlc3Ryb3llZCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKGV2ZW50TmFtZSA9PT0gJ2JlZm9yZUV4aXQnKSB7XG4gICAgLy8gV2Ugc3RpbGwgaGF2ZSBhbiBldmVudCBsb29wLCBsZXQncyB1c2UgaXRcbiAgICBzdHJlYW0uZmx1c2goKVxuICAgIHN0cmVhbS5vbignZHJhaW4nLCBmdW5jdGlvbiAoKSB7XG4gICAgICBzdHJlYW0uZW5kKClcbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIC8vIFdlIGRvIG5vdCBoYXZlIGFuIGV2ZW50IGxvb3AsIHNvIGZsdXNoIHN5bmNocm9ub3VzbHlcbiAgICBzdHJlYW0uZmx1c2hTeW5jKClcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js":
/*!***********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/create-date.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = createDate\n\nconst isValidDate = __webpack_require__(/*! ./is-valid-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\")\n\n/**\n * Constructs a JS Date from a number or string. Accepts any single number\n * or single string argument that is valid for the Date() constructor,\n * or an epoch as a string.\n *\n * @param {string|number} epoch The representation of the Date.\n *\n * @returns {Date} The constructed Date.\n */\nfunction createDate (epoch) {\n  // If epoch is already a valid argument, return the valid Date\n  let date = new Date(epoch)\n  if (isValidDate(date)) {\n    return date\n  }\n\n  // Convert to a number to permit epoch as a string\n  date = new Date(+epoch)\n  return date\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2NyZWF0ZS1kYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFpQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phc29uYy9EZXNrdG9wL0VpZ2VuUHJvdGVjdGVkQVZTSG9vay9laWdlbi1wcm90ZWN0ZWQtYXZzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvY3JlYXRlLWRhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlRGF0ZVxuXG5jb25zdCBpc1ZhbGlkRGF0ZSA9IHJlcXVpcmUoJy4vaXMtdmFsaWQtZGF0ZScpXG5cbi8qKlxuICogQ29uc3RydWN0cyBhIEpTIERhdGUgZnJvbSBhIG51bWJlciBvciBzdHJpbmcuIEFjY2VwdHMgYW55IHNpbmdsZSBudW1iZXJcbiAqIG9yIHNpbmdsZSBzdHJpbmcgYXJndW1lbnQgdGhhdCBpcyB2YWxpZCBmb3IgdGhlIERhdGUoKSBjb25zdHJ1Y3RvcixcbiAqIG9yIGFuIGVwb2NoIGFzIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gZXBvY2ggVGhlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBEYXRlLlxuICpcbiAqIEByZXR1cm5zIHtEYXRlfSBUaGUgY29uc3RydWN0ZWQgRGF0ZS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGF0ZSAoZXBvY2gpIHtcbiAgLy8gSWYgZXBvY2ggaXMgYWxyZWFkeSBhIHZhbGlkIGFyZ3VtZW50LCByZXR1cm4gdGhlIHZhbGlkIERhdGVcbiAgbGV0IGRhdGUgPSBuZXcgRGF0ZShlcG9jaClcbiAgaWYgKGlzVmFsaWREYXRlKGRhdGUpKSB7XG4gICAgcmV0dXJuIGRhdGVcbiAgfVxuXG4gIC8vIENvbnZlcnQgdG8gYSBudW1iZXIgdG8gcGVybWl0IGVwb2NoIGFzIGEgc3RyaW5nXG4gIGRhdGUgPSBuZXcgRGF0ZSgrZXBvY2gpXG4gIHJldHVybiBkYXRlXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/delete-log-property.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = deleteLogProperty\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\nconst splitPropertyKey = __webpack_require__(/*! ./split-property-key */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\")\n\n/**\n * Deletes a specified property from a log object if it exists.\n * This function mutates the passed in `log` object.\n *\n * @param {object} log The log object to be modified.\n * @param {string} property A string identifying the property to be deleted from\n * the log object. Accepts nested properties delimited by a `.`\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`\n */\nfunction deleteLogProperty (log, property) {\n  const props = splitPropertyKey(property)\n  const propToDelete = props.pop()\n\n  log = getPropertyValue(log, props)\n\n  /* istanbul ignore else */\n  if (log !== null && typeof log === 'object' && Object.prototype.hasOwnProperty.call(log, propToDelete)) {\n    delete log[propToDelete]\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2RlbGV0ZS1sb2ctcHJvcGVydHkuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsOEZBQXNCO0FBQ3ZELHlCQUF5QixtQkFBTyxDQUFDLDhGQUFzQjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2RlbGV0ZS1sb2ctcHJvcGVydHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZGVsZXRlTG9nUHJvcGVydHlcblxuY29uc3QgZ2V0UHJvcGVydHlWYWx1ZSA9IHJlcXVpcmUoJy4vZ2V0LXByb3BlcnR5LXZhbHVlJylcbmNvbnN0IHNwbGl0UHJvcGVydHlLZXkgPSByZXF1aXJlKCcuL3NwbGl0LXByb3BlcnR5LWtleScpXG5cbi8qKlxuICogRGVsZXRlcyBhIHNwZWNpZmllZCBwcm9wZXJ0eSBmcm9tIGEgbG9nIG9iamVjdCBpZiBpdCBleGlzdHMuXG4gKiBUaGlzIGZ1bmN0aW9uIG11dGF0ZXMgdGhlIHBhc3NlZCBpbiBgbG9nYCBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGxvZyBUaGUgbG9nIG9iamVjdCB0byBiZSBtb2RpZmllZC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eSBBIHN0cmluZyBpZGVudGlmeWluZyB0aGUgcHJvcGVydHkgdG8gYmUgZGVsZXRlZCBmcm9tXG4gKiB0aGUgbG9nIG9iamVjdC4gQWNjZXB0cyBuZXN0ZWQgcHJvcGVydGllcyBkZWxpbWl0ZWQgYnkgYSBgLmBcbiAqIERlbGltaXRlciBjYW4gYmUgZXNjYXBlZCB0byBwcmVzZXJ2ZSBwcm9wZXJ0eSBuYW1lcyB0aGF0IGNvbnRhaW4gdGhlIGRlbGltaXRlci5cbiAqIGUuZy4gYCdwcm9wMS5wcm9wMidgIG9yIGAncHJvcDJcXC5kb21haW5cXC5jb3JwLnByb3AyJ2BcbiAqL1xuZnVuY3Rpb24gZGVsZXRlTG9nUHJvcGVydHkgKGxvZywgcHJvcGVydHkpIHtcbiAgY29uc3QgcHJvcHMgPSBzcGxpdFByb3BlcnR5S2V5KHByb3BlcnR5KVxuICBjb25zdCBwcm9wVG9EZWxldGUgPSBwcm9wcy5wb3AoKVxuXG4gIGxvZyA9IGdldFByb3BlcnR5VmFsdWUobG9nLCBwcm9wcylcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAobG9nICE9PSBudWxsICYmIHR5cGVvZiBsb2cgPT09ICdvYmplY3QnICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChsb2csIHByb3BUb0RlbGV0ZSkpIHtcbiAgICBkZWxldGUgbG9nW3Byb3BUb0RlbGV0ZV1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js":
/*!**********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/filter-log.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = filterLog\n\nconst { createCopier } = __webpack_require__(/*! fast-copy */ \"(ssr)/./node_modules/fast-copy/dist/cjs/index.cjs\")\nconst fastCopy = createCopier({})\n\nconst deleteLogProperty = __webpack_require__(/*! ./delete-log-property */ \"(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\")\n\n/**\n * @typedef {object} FilterLogParams\n * @property {object} log The log object to be modified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Filter a log object by removing or including keys accordingly.\n * When `includeKeys` is passed, `ignoredKeys` will be ignored.\n * One of ignoreKeys or includeKeys must be pass in.\n *\n * @param {FilterLogParams} input\n *\n * @returns {object} A new `log` object instance that\n *  either only includes the keys in ignoreKeys\n *  or does not include those in ignoredKeys.\n */\nfunction filterLog ({ log, context }) {\n  const { ignoreKeys, includeKeys } = context\n  const logCopy = fastCopy(log)\n\n  if (includeKeys) {\n    const logIncluded = {}\n\n    includeKeys.forEach((key) => {\n      logIncluded[key] = logCopy[key]\n    })\n    return logIncluded\n  }\n\n  ignoreKeys.forEach((ignoreKey) => {\n    deleteLogProperty(logCopy, ignoreKey)\n  })\n  return logCopy\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2ZpbHRlci1sb2cuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEsUUFBUSxlQUFlLEVBQUUsbUJBQU8sQ0FBQyxvRUFBVztBQUM1QyxnQ0FBZ0M7O0FBRWhDLDBCQUEwQixtQkFBTyxDQUFDLGdHQUF1Qjs7QUFFekQ7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsY0FBYztBQUNwQyxVQUFVLDBCQUEwQjtBQUNwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2ZpbHRlci1sb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZmlsdGVyTG9nXG5cbmNvbnN0IHsgY3JlYXRlQ29waWVyIH0gPSByZXF1aXJlKCdmYXN0LWNvcHknKVxuY29uc3QgZmFzdENvcHkgPSBjcmVhdGVDb3BpZXIoe30pXG5cbmNvbnN0IGRlbGV0ZUxvZ1Byb3BlcnR5ID0gcmVxdWlyZSgnLi9kZWxldGUtbG9nLXByb3BlcnR5JylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBGaWx0ZXJMb2dQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3QgdG8gYmUgbW9kaWZpZWQuXG4gKiBAcHJvcGVydHkge1ByZXR0eUNvbnRleHR9IGNvbnRleHQgVGhlIGNvbnRleHQgb2JqZWN0IGJ1aWx0IGZyb20gcGFyc2luZ1xuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBGaWx0ZXIgYSBsb2cgb2JqZWN0IGJ5IHJlbW92aW5nIG9yIGluY2x1ZGluZyBrZXlzIGFjY29yZGluZ2x5LlxuICogV2hlbiBgaW5jbHVkZUtleXNgIGlzIHBhc3NlZCwgYGlnbm9yZWRLZXlzYCB3aWxsIGJlIGlnbm9yZWQuXG4gKiBPbmUgb2YgaWdub3JlS2V5cyBvciBpbmNsdWRlS2V5cyBtdXN0IGJlIHBhc3MgaW4uXG4gKlxuICogQHBhcmFtIHtGaWx0ZXJMb2dQYXJhbXN9IGlucHV0XG4gKlxuICogQHJldHVybnMge29iamVjdH0gQSBuZXcgYGxvZ2Agb2JqZWN0IGluc3RhbmNlIHRoYXRcbiAqICBlaXRoZXIgb25seSBpbmNsdWRlcyB0aGUga2V5cyBpbiBpZ25vcmVLZXlzXG4gKiAgb3IgZG9lcyBub3QgaW5jbHVkZSB0aG9zZSBpbiBpZ25vcmVkS2V5cy5cbiAqL1xuZnVuY3Rpb24gZmlsdGVyTG9nICh7IGxvZywgY29udGV4dCB9KSB7XG4gIGNvbnN0IHsgaWdub3JlS2V5cywgaW5jbHVkZUtleXMgfSA9IGNvbnRleHRcbiAgY29uc3QgbG9nQ29weSA9IGZhc3RDb3B5KGxvZylcblxuICBpZiAoaW5jbHVkZUtleXMpIHtcbiAgICBjb25zdCBsb2dJbmNsdWRlZCA9IHt9XG5cbiAgICBpbmNsdWRlS2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGxvZ0luY2x1ZGVkW2tleV0gPSBsb2dDb3B5W2tleV1cbiAgICB9KVxuICAgIHJldHVybiBsb2dJbmNsdWRlZFxuICB9XG5cbiAgaWdub3JlS2V5cy5mb3JFYWNoKChpZ25vcmVLZXkpID0+IHtcbiAgICBkZWxldGVMb2dQcm9wZXJ0eShsb2dDb3B5LCBpZ25vcmVLZXkpXG4gIH0pXG4gIHJldHVybiBsb2dDb3B5XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js":
/*!***********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/format-time.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = formatTime\n\nconst {\n  DATE_FORMAT,\n  DATE_FORMAT_SIMPLE\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst dateformat = __webpack_require__(/*! dateformat */ \"(ssr)/./node_modules/dateformat/lib/dateformat.js\")\nconst createDate = __webpack_require__(/*! ./create-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\")\nconst isValidDate = __webpack_require__(/*! ./is-valid-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\")\n\n/**\n * Converts a given `epoch` to a desired display format.\n *\n * @param {number|string} epoch The time to convert. May be any value that is\n * valid for `new Date()`.\n * @param {boolean|string} [translateTime=false] When `false`, the given `epoch`\n * will simply be returned. When `true`, the given `epoch` will be converted\n * to a string at UTC using the `DATE_FORMAT` constant. If `translateTime` is\n * a string, the following rules are available:\n *\n * - `<format string>`: The string is a literal format string. This format\n * string will be used to interpret the `epoch` and return a display string\n * at UTC.\n * - `SYS:STANDARD`: The returned display string will follow the `DATE_FORMAT`\n * constant at the system's local timezone.\n * - `SYS:<format string>`: The returned display string will follow the given\n * `<format string>` at the system's local timezone.\n * - `UTC:<format string>`: The returned display string will follow the given\n * `<format string>` at UTC.\n *\n * @returns {number|string} The formatted time.\n */\nfunction formatTime (epoch, translateTime = false) {\n  if (translateTime === false) {\n    return epoch\n  }\n\n  const instant = createDate(epoch)\n\n  // If the Date is invalid, do not attempt to format\n  if (!isValidDate(instant)) {\n    return epoch\n  }\n\n  if (translateTime === true) {\n    return dateformat(instant, DATE_FORMAT_SIMPLE)\n  }\n\n  const upperFormat = translateTime.toUpperCase()\n  if (upperFormat === 'SYS:STANDARD') {\n    return dateformat(instant, DATE_FORMAT)\n  }\n\n  const prefix = upperFormat.substr(0, 4)\n  if (prefix === 'SYS:' || prefix === 'UTC:') {\n    if (prefix === 'UTC:') {\n      return dateformat(instant, translateTime)\n    }\n    return dateformat(instant, translateTime.slice(4))\n  }\n\n  return dateformat(instant, `UTC:${translateTime}`)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2Zvcm1hdC10aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUUxQixtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBWTtBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBZTtBQUMxQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBaUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DLGNBQWM7QUFDbEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2Zvcm1hdC10aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZvcm1hdFRpbWVcblxuY29uc3Qge1xuICBEQVRFX0ZPUk1BVCxcbiAgREFURV9GT1JNQVRfU0lNUExFXG59ID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJylcblxuY29uc3QgZGF0ZWZvcm1hdCA9IHJlcXVpcmUoJ2RhdGVmb3JtYXQnKVxuY29uc3QgY3JlYXRlRGF0ZSA9IHJlcXVpcmUoJy4vY3JlYXRlLWRhdGUnKVxuY29uc3QgaXNWYWxpZERhdGUgPSByZXF1aXJlKCcuL2lzLXZhbGlkLWRhdGUnKVxuXG4vKipcbiAqIENvbnZlcnRzIGEgZ2l2ZW4gYGVwb2NoYCB0byBhIGRlc2lyZWQgZGlzcGxheSBmb3JtYXQuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBlcG9jaCBUaGUgdGltZSB0byBjb252ZXJ0LiBNYXkgYmUgYW55IHZhbHVlIHRoYXQgaXNcbiAqIHZhbGlkIGZvciBgbmV3IERhdGUoKWAuXG4gKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfSBbdHJhbnNsYXRlVGltZT1mYWxzZV0gV2hlbiBgZmFsc2VgLCB0aGUgZ2l2ZW4gYGVwb2NoYFxuICogd2lsbCBzaW1wbHkgYmUgcmV0dXJuZWQuIFdoZW4gYHRydWVgLCB0aGUgZ2l2ZW4gYGVwb2NoYCB3aWxsIGJlIGNvbnZlcnRlZFxuICogdG8gYSBzdHJpbmcgYXQgVVRDIHVzaW5nIHRoZSBgREFURV9GT1JNQVRgIGNvbnN0YW50LiBJZiBgdHJhbnNsYXRlVGltZWAgaXNcbiAqIGEgc3RyaW5nLCB0aGUgZm9sbG93aW5nIHJ1bGVzIGFyZSBhdmFpbGFibGU6XG4gKlxuICogLSBgPGZvcm1hdCBzdHJpbmc+YDogVGhlIHN0cmluZyBpcyBhIGxpdGVyYWwgZm9ybWF0IHN0cmluZy4gVGhpcyBmb3JtYXRcbiAqIHN0cmluZyB3aWxsIGJlIHVzZWQgdG8gaW50ZXJwcmV0IHRoZSBgZXBvY2hgIGFuZCByZXR1cm4gYSBkaXNwbGF5IHN0cmluZ1xuICogYXQgVVRDLlxuICogLSBgU1lTOlNUQU5EQVJEYDogVGhlIHJldHVybmVkIGRpc3BsYXkgc3RyaW5nIHdpbGwgZm9sbG93IHRoZSBgREFURV9GT1JNQVRgXG4gKiBjb25zdGFudCBhdCB0aGUgc3lzdGVtJ3MgbG9jYWwgdGltZXpvbmUuXG4gKiAtIGBTWVM6PGZvcm1hdCBzdHJpbmc+YDogVGhlIHJldHVybmVkIGRpc3BsYXkgc3RyaW5nIHdpbGwgZm9sbG93IHRoZSBnaXZlblxuICogYDxmb3JtYXQgc3RyaW5nPmAgYXQgdGhlIHN5c3RlbSdzIGxvY2FsIHRpbWV6b25lLlxuICogLSBgVVRDOjxmb3JtYXQgc3RyaW5nPmA6IFRoZSByZXR1cm5lZCBkaXNwbGF5IHN0cmluZyB3aWxsIGZvbGxvdyB0aGUgZ2l2ZW5cbiAqIGA8Zm9ybWF0IHN0cmluZz5gIGF0IFVUQy5cbiAqXG4gKiBAcmV0dXJucyB7bnVtYmVyfHN0cmluZ30gVGhlIGZvcm1hdHRlZCB0aW1lLlxuICovXG5mdW5jdGlvbiBmb3JtYXRUaW1lIChlcG9jaCwgdHJhbnNsYXRlVGltZSA9IGZhbHNlKSB7XG4gIGlmICh0cmFuc2xhdGVUaW1lID09PSBmYWxzZSkge1xuICAgIHJldHVybiBlcG9jaFxuICB9XG5cbiAgY29uc3QgaW5zdGFudCA9IGNyZWF0ZURhdGUoZXBvY2gpXG5cbiAgLy8gSWYgdGhlIERhdGUgaXMgaW52YWxpZCwgZG8gbm90IGF0dGVtcHQgdG8gZm9ybWF0XG4gIGlmICghaXNWYWxpZERhdGUoaW5zdGFudCkpIHtcbiAgICByZXR1cm4gZXBvY2hcbiAgfVxuXG4gIGlmICh0cmFuc2xhdGVUaW1lID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIGRhdGVmb3JtYXQoaW5zdGFudCwgREFURV9GT1JNQVRfU0lNUExFKVxuICB9XG5cbiAgY29uc3QgdXBwZXJGb3JtYXQgPSB0cmFuc2xhdGVUaW1lLnRvVXBwZXJDYXNlKClcbiAgaWYgKHVwcGVyRm9ybWF0ID09PSAnU1lTOlNUQU5EQVJEJykge1xuICAgIHJldHVybiBkYXRlZm9ybWF0KGluc3RhbnQsIERBVEVfRk9STUFUKVxuICB9XG5cbiAgY29uc3QgcHJlZml4ID0gdXBwZXJGb3JtYXQuc3Vic3RyKDAsIDQpXG4gIGlmIChwcmVmaXggPT09ICdTWVM6JyB8fCBwcmVmaXggPT09ICdVVEM6Jykge1xuICAgIGlmIChwcmVmaXggPT09ICdVVEM6Jykge1xuICAgICAgcmV0dXJuIGRhdGVmb3JtYXQoaW5zdGFudCwgdHJhbnNsYXRlVGltZSlcbiAgICB9XG4gICAgcmV0dXJuIGRhdGVmb3JtYXQoaW5zdGFudCwgdHJhbnNsYXRlVGltZS5zbGljZSg0KSlcbiAgfVxuXG4gIHJldHVybiBkYXRlZm9ybWF0KGluc3RhbnQsIGBVVEM6JHt0cmFuc2xhdGVUaW1lfWApXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js":
/*!********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/get-level-label-data.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = getLevelLabelData\nconst { LEVELS, LEVEL_NAMES } = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\n/**\n * Given initial settings for custom levels/names and use of only custom props\n * get the level label that corresponds with a given level number\n *\n * @param {boolean} useOnlyCustomProps\n * @param {object} customLevels\n * @param {object} customLevelNames\n *\n * @returns {function} A function that takes a number level and returns the level's label string\n */\nfunction getLevelLabelData (useOnlyCustomProps, customLevels, customLevelNames) {\n  const levels = useOnlyCustomProps ? customLevels || LEVELS : Object.assign({}, LEVELS, customLevels)\n  const levelNames = useOnlyCustomProps ? customLevelNames || LEVEL_NAMES : Object.assign({}, LEVEL_NAMES, customLevelNames)\n  return function (level) {\n    let levelNum = 'default'\n    if (Number.isInteger(+level)) {\n      levelNum = Object.prototype.hasOwnProperty.call(levels, level) ? level : levelNum\n    } else {\n      levelNum = Object.prototype.hasOwnProperty.call(levelNames, level.toLowerCase()) ? levelNames[level.toLowerCase()] : levelNum\n    }\n\n    return [levels[levelNum], levelNum]\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2dldC1sZXZlbC1sYWJlbC1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0EsUUFBUSxzQkFBc0IsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQSwrRUFBK0U7QUFDL0UsNEZBQTRGO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9nZXQtbGV2ZWwtbGFiZWwtZGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRMZXZlbExhYmVsRGF0YVxuY29uc3QgeyBMRVZFTFMsIExFVkVMX05BTUVTIH0gPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKVxuXG4vKipcbiAqIEdpdmVuIGluaXRpYWwgc2V0dGluZ3MgZm9yIGN1c3RvbSBsZXZlbHMvbmFtZXMgYW5kIHVzZSBvZiBvbmx5IGN1c3RvbSBwcm9wc1xuICogZ2V0IHRoZSBsZXZlbCBsYWJlbCB0aGF0IGNvcnJlc3BvbmRzIHdpdGggYSBnaXZlbiBsZXZlbCBudW1iZXJcbiAqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHVzZU9ubHlDdXN0b21Qcm9wc1xuICogQHBhcmFtIHtvYmplY3R9IGN1c3RvbUxldmVsc1xuICogQHBhcmFtIHtvYmplY3R9IGN1c3RvbUxldmVsTmFtZXNcbiAqXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb259IEEgZnVuY3Rpb24gdGhhdCB0YWtlcyBhIG51bWJlciBsZXZlbCBhbmQgcmV0dXJucyB0aGUgbGV2ZWwncyBsYWJlbCBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gZ2V0TGV2ZWxMYWJlbERhdGEgKHVzZU9ubHlDdXN0b21Qcm9wcywgY3VzdG9tTGV2ZWxzLCBjdXN0b21MZXZlbE5hbWVzKSB7XG4gIGNvbnN0IGxldmVscyA9IHVzZU9ubHlDdXN0b21Qcm9wcyA/IGN1c3RvbUxldmVscyB8fCBMRVZFTFMgOiBPYmplY3QuYXNzaWduKHt9LCBMRVZFTFMsIGN1c3RvbUxldmVscylcbiAgY29uc3QgbGV2ZWxOYW1lcyA9IHVzZU9ubHlDdXN0b21Qcm9wcyA/IGN1c3RvbUxldmVsTmFtZXMgfHwgTEVWRUxfTkFNRVMgOiBPYmplY3QuYXNzaWduKHt9LCBMRVZFTF9OQU1FUywgY3VzdG9tTGV2ZWxOYW1lcylcbiAgcmV0dXJuIGZ1bmN0aW9uIChsZXZlbCkge1xuICAgIGxldCBsZXZlbE51bSA9ICdkZWZhdWx0J1xuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKCtsZXZlbCkpIHtcbiAgICAgIGxldmVsTnVtID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGxldmVscywgbGV2ZWwpID8gbGV2ZWwgOiBsZXZlbE51bVxuICAgIH0gZWxzZSB7XG4gICAgICBsZXZlbE51bSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChsZXZlbE5hbWVzLCBsZXZlbC50b0xvd2VyQ2FzZSgpKSA/IGxldmVsTmFtZXNbbGV2ZWwudG9Mb3dlckNhc2UoKV0gOiBsZXZlbE51bVxuICAgIH1cblxuICAgIHJldHVybiBbbGV2ZWxzW2xldmVsTnVtXSwgbGV2ZWxOdW1dXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/get-property-value.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = getPropertyValue\n\nconst splitPropertyKey = __webpack_require__(/*! ./split-property-key */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\")\n\n/**\n * Gets a specified property from an object if it exists.\n *\n * @param {object} obj The object to be searched.\n * @param {string|string[]} property A string, or an array of strings, identifying\n * the property to be retrieved from the object.\n * Accepts nested properties delimited by a `.`.\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`.\n *\n * @returns {*}\n */\nfunction getPropertyValue (obj, property) {\n  const props = Array.isArray(property) ? property : splitPropertyKey(property)\n\n  for (const prop of props) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return\n    }\n    obj = obj[prop]\n  }\n\n  return obj\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2dldC1wcm9wZXJ0eS12YWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQSx5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBc0I7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phc29uYy9EZXNrdG9wL0VpZ2VuUHJvdGVjdGVkQVZTSG9vay9laWdlbi1wcm90ZWN0ZWQtYXZzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvZ2V0LXByb3BlcnR5LXZhbHVlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFByb3BlcnR5VmFsdWVcblxuY29uc3Qgc3BsaXRQcm9wZXJ0eUtleSA9IHJlcXVpcmUoJy4vc3BsaXQtcHJvcGVydHkta2V5JylcblxuLyoqXG4gKiBHZXRzIGEgc3BlY2lmaWVkIHByb3BlcnR5IGZyb20gYW4gb2JqZWN0IGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqIFRoZSBvYmplY3QgdG8gYmUgc2VhcmNoZWQuXG4gKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0gcHJvcGVydHkgQSBzdHJpbmcsIG9yIGFuIGFycmF5IG9mIHN0cmluZ3MsIGlkZW50aWZ5aW5nXG4gKiB0aGUgcHJvcGVydHkgdG8gYmUgcmV0cmlldmVkIGZyb20gdGhlIG9iamVjdC5cbiAqIEFjY2VwdHMgbmVzdGVkIHByb3BlcnRpZXMgZGVsaW1pdGVkIGJ5IGEgYC5gLlxuICogRGVsaW1pdGVyIGNhbiBiZSBlc2NhcGVkIHRvIHByZXNlcnZlIHByb3BlcnR5IG5hbWVzIHRoYXQgY29udGFpbiB0aGUgZGVsaW1pdGVyLlxuICogZS5nLiBgJ3Byb3AxLnByb3AyJ2Agb3IgYCdwcm9wMlxcLmRvbWFpblxcLmNvcnAucHJvcDInYC5cbiAqXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvcGVydHlWYWx1ZSAob2JqLCBwcm9wZXJ0eSkge1xuICBjb25zdCBwcm9wcyA9IEFycmF5LmlzQXJyYXkocHJvcGVydHkpID8gcHJvcGVydHkgOiBzcGxpdFByb3BlcnR5S2V5KHByb3BlcnR5KVxuXG4gIGZvciAoY29uc3QgcHJvcCBvZiBwcm9wcykge1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBvYmogPSBvYmpbcHJvcF1cbiAgfVxuXG4gIHJldHVybiBvYmpcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = handleCustomLevelsNamesOpts\n\n/**\n * Parse a CSV string or options object that maps level\n * labels to level values.\n *\n * @param {string|object} cLevels An object mapping level\n * names to level values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels names to level values\n * e.g. `{ info: 30, debug: 65 }`.\n */\nfunction handleCustomLevelsNamesOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelName.toLowerCase()] = levelNum\n        return agg\n      }, {})\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[levelName.toLowerCase()] = cLevels[levelName]\n        return agg\n      }, {})\n  } else {\n    return {}\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW5hbWVzLW9wdHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsa0NBQWtDLHFCQUFxQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUFJO0FBQ1gsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQUk7QUFDWCxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9oYW5kbGUtY3VzdG9tLWxldmVscy1uYW1lcy1vcHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhhbmRsZUN1c3RvbUxldmVsc05hbWVzT3B0c1xuXG4vKipcbiAqIFBhcnNlIGEgQ1NWIHN0cmluZyBvciBvcHRpb25zIG9iamVjdCB0aGF0IG1hcHMgbGV2ZWxcbiAqIGxhYmVscyB0byBsZXZlbCB2YWx1ZXMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8b2JqZWN0fSBjTGV2ZWxzIEFuIG9iamVjdCBtYXBwaW5nIGxldmVsXG4gKiBuYW1lcyB0byBsZXZlbCB2YWx1ZXMsIGUuZy4gYHsgaW5mbzogMzAsIGRlYnVnOiA2NSB9YCwgb3IgYVxuICogQ1NWIHN0cmluZyBpbiB0aGUgZm9ybWF0IGBsZXZlbF9uYW1lOmxldmVsX3ZhbHVlYCwgZS5nLlxuICogYGluZm86MzAsZGVidWc6NjVgLlxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9IEFuIG9iamVjdCBtYXBwaW5nIGxldmVscyBuYW1lcyB0byBsZXZlbCB2YWx1ZXNcbiAqIGUuZy4gYHsgaW5mbzogMzAsIGRlYnVnOiA2NSB9YC5cbiAqL1xuZnVuY3Rpb24gaGFuZGxlQ3VzdG9tTGV2ZWxzTmFtZXNPcHRzIChjTGV2ZWxzKSB7XG4gIGlmICghY0xldmVscykgcmV0dXJuIHt9XG5cbiAgaWYgKHR5cGVvZiBjTGV2ZWxzID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBjTGV2ZWxzXG4gICAgICAuc3BsaXQoJywnKVxuICAgICAgLnJlZHVjZSgoYWdnLCB2YWx1ZSwgaWR4KSA9PiB7XG4gICAgICAgIGNvbnN0IFtsZXZlbE5hbWUsIGxldmVsTnVtID0gaWR4XSA9IHZhbHVlLnNwbGl0KCc6JylcbiAgICAgICAgYWdnW2xldmVsTmFtZS50b0xvd2VyQ2FzZSgpXSA9IGxldmVsTnVtXG4gICAgICAgIHJldHVybiBhZ2dcbiAgICAgIH0sIHt9KVxuICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChjTGV2ZWxzKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICByZXR1cm4gT2JqZWN0XG4gICAgICAua2V5cyhjTGV2ZWxzKVxuICAgICAgLnJlZHVjZSgoYWdnLCBsZXZlbE5hbWUpID0+IHtcbiAgICAgICAgYWdnW2xldmVsTmFtZS50b0xvd2VyQ2FzZSgpXSA9IGNMZXZlbHNbbGV2ZWxOYW1lXVxuICAgICAgICByZXR1cm4gYWdnXG4gICAgICB9LCB7fSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge31cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js":
/*!*************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = handleCustomLevelsOpts\n\n/**\n * Parse a CSV string or options object that specifies\n * configuration for custom levels.\n *\n * @param {string|object} cLevels An object mapping level\n * names to values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels to labels that\n * appear in logs, e.g. `{ '30': 'INFO', '65': 'DEBUG' }`.\n */\nfunction handleCustomLevelsOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelNum] = levelName.toUpperCase()\n        return agg\n      },\n      { default: 'USERLVL' })\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[cLevels[levelName]] = levelName.toUpperCase()\n        return agg\n      }, { default: 'USERLVL' })\n  } else {\n    return {}\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW9wdHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsUUFBUSxvQkFBb0I7QUFDNUIsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQUksb0JBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW9wdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gaGFuZGxlQ3VzdG9tTGV2ZWxzT3B0c1xuXG4vKipcbiAqIFBhcnNlIGEgQ1NWIHN0cmluZyBvciBvcHRpb25zIG9iamVjdCB0aGF0IHNwZWNpZmllc1xuICogY29uZmlndXJhdGlvbiBmb3IgY3VzdG9tIGxldmVscy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xvYmplY3R9IGNMZXZlbHMgQW4gb2JqZWN0IG1hcHBpbmcgbGV2ZWxcbiAqIG5hbWVzIHRvIHZhbHVlcywgZS5nLiBgeyBpbmZvOiAzMCwgZGVidWc6IDY1IH1gLCBvciBhXG4gKiBDU1Ygc3RyaW5nIGluIHRoZSBmb3JtYXQgYGxldmVsX25hbWU6bGV2ZWxfdmFsdWVgLCBlLmcuXG4gKiBgaW5mbzozMCxkZWJ1Zzo2NWAuXG4gKlxuICogQHJldHVybnMge29iamVjdH0gQW4gb2JqZWN0IG1hcHBpbmcgbGV2ZWxzIHRvIGxhYmVscyB0aGF0XG4gKiBhcHBlYXIgaW4gbG9ncywgZS5nLiBgeyAnMzAnOiAnSU5GTycsICc2NSc6ICdERUJVRycgfWAuXG4gKi9cbmZ1bmN0aW9uIGhhbmRsZUN1c3RvbUxldmVsc09wdHMgKGNMZXZlbHMpIHtcbiAgaWYgKCFjTGV2ZWxzKSByZXR1cm4ge31cblxuICBpZiAodHlwZW9mIGNMZXZlbHMgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGNMZXZlbHNcbiAgICAgIC5zcGxpdCgnLCcpXG4gICAgICAucmVkdWNlKChhZ2csIHZhbHVlLCBpZHgpID0+IHtcbiAgICAgICAgY29uc3QgW2xldmVsTmFtZSwgbGV2ZWxOdW0gPSBpZHhdID0gdmFsdWUuc3BsaXQoJzonKVxuICAgICAgICBhZ2dbbGV2ZWxOdW1dID0gbGV2ZWxOYW1lLnRvVXBwZXJDYXNlKClcbiAgICAgICAgcmV0dXJuIGFnZ1xuICAgICAgfSxcbiAgICAgIHsgZGVmYXVsdDogJ1VTRVJMVkwnIH0pXG4gIH0gZWxzZSBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGNMZXZlbHMpID09PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIHJldHVybiBPYmplY3RcbiAgICAgIC5rZXlzKGNMZXZlbHMpXG4gICAgICAucmVkdWNlKChhZ2csIGxldmVsTmFtZSkgPT4ge1xuICAgICAgICBhZ2dbY0xldmVsc1tsZXZlbE5hbWVdXSA9IGxldmVsTmFtZS50b1VwcGVyQ2FzZSgpXG4gICAgICAgIHJldHVybiBhZ2dcbiAgICAgIH0sIHsgZGVmYXVsdDogJ1VTRVJMVkwnIH0pXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHt9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = {\n  buildSafeSonicBoom: __webpack_require__(/*! ./build-safe-sonic-boom.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js\"),\n  createDate: __webpack_require__(/*! ./create-date.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\"),\n  deleteLogProperty: __webpack_require__(/*! ./delete-log-property.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\"),\n  filterLog: __webpack_require__(/*! ./filter-log.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\"),\n  formatTime: __webpack_require__(/*! ./format-time.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\"),\n  getPropertyValue: __webpack_require__(/*! ./get-property-value.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\"),\n  handleCustomLevelsNamesOpts: __webpack_require__(/*! ./handle-custom-levels-names-opts.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\"),\n  handleCustomLevelsOpts: __webpack_require__(/*! ./handle-custom-levels-opts.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\"),\n  interpretConditionals: __webpack_require__(/*! ./interpret-conditionals.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\"),\n  isObject: __webpack_require__(/*! ./is-object.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\"),\n  isValidDate: __webpack_require__(/*! ./is-valid-date.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\"),\n  joinLinesWithIndentation: __webpack_require__(/*! ./join-lines-with-indentation.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\"),\n  noop: __webpack_require__(/*! ./noop.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\"),\n  parseFactoryOptions: __webpack_require__(/*! ./parse-factory-options.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js\"),\n  prettifyErrorLog: __webpack_require__(/*! ./prettify-error-log.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\"),\n  prettifyError: __webpack_require__(/*! ./prettify-error.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\"),\n  prettifyLevel: __webpack_require__(/*! ./prettify-level.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\"),\n  prettifyMessage: __webpack_require__(/*! ./prettify-message.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\"),\n  prettifyMetadata: __webpack_require__(/*! ./prettify-metadata.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\"),\n  prettifyObject: __webpack_require__(/*! ./prettify-object.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\"),\n  prettifyTime: __webpack_require__(/*! ./prettify-time.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\"),\n  splitPropertyKey: __webpack_require__(/*! ./split-property-key.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\"),\n  getLevelLabelData: __webpack_require__(/*! ./get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\n}\n\n// The remainder of this file consists of jsdoc blocks that are difficult to\n// determine a more appropriate \"home\" for. As an example, the blocks associated\n// with custom prettifiers could live in either the `prettify-level`,\n// `prettify-metadata`, or `prettify-time` files since they are the primary\n// files where such code is used. But we want a central place to define common\n// doc blocks, so we are picking this file as the answer.\n\n/**\n * A hash of log property names mapped to prettifier functions. When the\n * incoming log data is being processed for prettification, any key on the log\n * that matches a key in a custom prettifiers hash will be prettified using\n * that matching custom prettifier. The value passed to the custom prettifier\n * will the value associated with the corresponding log key.\n *\n * The hash may contain any arbitrary keys for arbitrary log properties, but it\n * may also contain a set of predefined key names that map to well-known log\n * properties. These keys are:\n *\n * + `time` (for the timestamp field)\n * + `level` (for the level label field; value may be a level number instead\n * of a level label)\n * + `hostname`\n * + `pid`\n * + `name`\n * + `caller`\n *\n * @typedef {Object.<string, CustomPrettifierFunc>} CustomPrettifiers\n */\n\n/**\n * A synchronous function to be used for prettifying a log property. It must\n * return a string.\n *\n * @typedef {function} CustomPrettifierFunc\n * @param {any} value The value to be prettified for the key associated with\n * the prettifier.\n * @returns {string}\n */\n\n/**\n * A tokenized string that indicates how the prettified log line should be\n * formatted. Tokens are either log properties enclosed in curly braces, e.g.\n * `{levelLabel}`, `{pid}`, or `{req.url}`, or conditional directives in curly\n * braces. The only conditional directives supported are `if` and `end`, e.g.\n * `{if pid}{pid}{end}`; every `if` must have a matching `end`. Nested\n * conditions are not supported.\n *\n * @typedef {string} MessageFormatString\n *\n * @example\n * `{levelLabel} - {if pid}{pid} - {end}url:{req.url}`\n */\n\n/**\n * @typedef {object} PrettifyMessageExtras\n * @property {object} colors Available color functions based on `useColor` (or `colorize`) context\n * the options.\n */\n\n/**\n * A function that accepts a log object, name of the message key, and name of\n * the level label key and returns a formatted log line.\n *\n * Note: this function must be synchronous.\n *\n * @typedef {function} MessageFormatFunction\n * @param {object} log The log object to be processed.\n * @param {string} messageKey The name of the key in the `log` object that\n * contains the log message.\n * @param {string} levelLabel The name of the key in the `log` object that\n * contains the log level name.\n * @param {PrettifyMessageExtras} extras Additional data available for message context\n * @returns {string}\n *\n * @example\n * function (log, messageKey, levelLabel) {\n *   return `${log[levelLabel]} - ${log[messageKey]}`\n * }\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js":
/*!**********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/interpret-conditionals.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = interpretConditionals\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\n\n/**\n * Translates all conditional blocks from within the messageFormat. Translates\n * any matching {if key}{key}{end} statements and returns everything between\n * if and else blocks if the key provided was found in log.\n *\n * @param {MessageFormatString|MessageFormatFunction} messageFormat A format\n * string or function that defines how the logged message should be\n * conditionally formatted.\n * @param {object} log The log object to be modified.\n *\n * @returns {string} The parsed messageFormat.\n */\nfunction interpretConditionals (messageFormat, log) {\n  messageFormat = messageFormat.replace(/{if (.*?)}(.*?){end}/g, replacer)\n\n  // Remove non-terminated if blocks\n  messageFormat = messageFormat.replace(/{if (.*?)}/g, '')\n  // Remove floating end blocks\n  messageFormat = messageFormat.replace(/{end}/g, '')\n\n  return messageFormat.replace(/\\s+/g, ' ').trim()\n\n  function replacer (_, key, value) {\n    const propertyValue = getPropertyValue(log, key)\n    if (propertyValue && value.includes(key)) {\n      return value.replace(new RegExp('{' + key + '}', 'g'), propertyValue)\n    } else {\n      return ''\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2ludGVycHJldC1jb25kaXRpb25hbHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsOEZBQXNCOztBQUV2RDtBQUNBO0FBQ0EsaUJBQWlCLFFBQVEsS0FBSyxLQUFLO0FBQ25DO0FBQ0E7QUFDQSxXQUFXLDJDQUEyQztBQUN0RDtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSwwQ0FBMEMsU0FBUyxNQUFNLElBQUk7O0FBRTdEO0FBQ0EsMENBQTBDLFNBQVM7QUFDbkQ7QUFDQSwwQ0FBMEMsSUFBSTs7QUFFOUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9pbnRlcnByZXQtY29uZGl0aW9uYWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludGVycHJldENvbmRpdGlvbmFsc1xuXG5jb25zdCBnZXRQcm9wZXJ0eVZhbHVlID0gcmVxdWlyZSgnLi9nZXQtcHJvcGVydHktdmFsdWUnKVxuXG4vKipcbiAqIFRyYW5zbGF0ZXMgYWxsIGNvbmRpdGlvbmFsIGJsb2NrcyBmcm9tIHdpdGhpbiB0aGUgbWVzc2FnZUZvcm1hdC4gVHJhbnNsYXRlc1xuICogYW55IG1hdGNoaW5nIHtpZiBrZXl9e2tleX17ZW5kfSBzdGF0ZW1lbnRzIGFuZCByZXR1cm5zIGV2ZXJ5dGhpbmcgYmV0d2VlblxuICogaWYgYW5kIGVsc2UgYmxvY2tzIGlmIHRoZSBrZXkgcHJvdmlkZWQgd2FzIGZvdW5kIGluIGxvZy5cbiAqXG4gKiBAcGFyYW0ge01lc3NhZ2VGb3JtYXRTdHJpbmd8TWVzc2FnZUZvcm1hdEZ1bmN0aW9ufSBtZXNzYWdlRm9ybWF0IEEgZm9ybWF0XG4gKiBzdHJpbmcgb3IgZnVuY3Rpb24gdGhhdCBkZWZpbmVzIGhvdyB0aGUgbG9nZ2VkIG1lc3NhZ2Ugc2hvdWxkIGJlXG4gKiBjb25kaXRpb25hbGx5IGZvcm1hdHRlZC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3QgdG8gYmUgbW9kaWZpZWQuXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIHBhcnNlZCBtZXNzYWdlRm9ybWF0LlxuICovXG5mdW5jdGlvbiBpbnRlcnByZXRDb25kaXRpb25hbHMgKG1lc3NhZ2VGb3JtYXQsIGxvZykge1xuICBtZXNzYWdlRm9ybWF0ID0gbWVzc2FnZUZvcm1hdC5yZXBsYWNlKC97aWYgKC4qPyl9KC4qPyl7ZW5kfS9nLCByZXBsYWNlcilcblxuICAvLyBSZW1vdmUgbm9uLXRlcm1pbmF0ZWQgaWYgYmxvY2tzXG4gIG1lc3NhZ2VGb3JtYXQgPSBtZXNzYWdlRm9ybWF0LnJlcGxhY2UoL3tpZiAoLio/KX0vZywgJycpXG4gIC8vIFJlbW92ZSBmbG9hdGluZyBlbmQgYmxvY2tzXG4gIG1lc3NhZ2VGb3JtYXQgPSBtZXNzYWdlRm9ybWF0LnJlcGxhY2UoL3tlbmR9L2csICcnKVxuXG4gIHJldHVybiBtZXNzYWdlRm9ybWF0LnJlcGxhY2UoL1xccysvZywgJyAnKS50cmltKClcblxuICBmdW5jdGlvbiByZXBsYWNlciAoXywga2V5LCB2YWx1ZSkge1xuICAgIGNvbnN0IHByb3BlcnR5VmFsdWUgPSBnZXRQcm9wZXJ0eVZhbHVlKGxvZywga2V5KVxuICAgIGlmIChwcm9wZXJ0eVZhbHVlICYmIHZhbHVlLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoJ3snICsga2V5ICsgJ30nLCAnZycpLCBwcm9wZXJ0eVZhbHVlKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJydcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js":
/*!*********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/is-object.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = isObject\n\nfunction isObject (input) {\n  return Object.prototype.toString.apply(input) === '[object Object]'\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2lzLW9iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2lzLW9iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdFxuXG5mdW5jdGlvbiBpc09iamVjdCAoaW5wdXQpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkoaW5wdXQpID09PSAnW29iamVjdCBPYmplY3RdJ1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js":
/*!*************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/is-valid-date.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = isValidDate\n\n/**\n * Checks if the argument is a JS Date and not 'Invalid Date'.\n *\n * @param {Date} date The date to check.\n *\n * @returns {boolean} true if the argument is a JS Date and not 'Invalid Date'.\n */\nfunction isValidDate (date) {\n  return date instanceof Date && !Number.isNaN(date.getTime())\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2lzLXZhbGlkLWRhdGUuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9pcy12YWxpZC1kYXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVmFsaWREYXRlXG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBhcmd1bWVudCBpcyBhIEpTIERhdGUgYW5kIG5vdCAnSW52YWxpZCBEYXRlJy5cbiAqXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgVGhlIGRhdGUgdG8gY2hlY2suXG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgdGhlIGFyZ3VtZW50IGlzIGEgSlMgRGF0ZSBhbmQgbm90ICdJbnZhbGlkIERhdGUnLlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkRGF0ZSAoZGF0ZSkge1xuICByZXR1cm4gZGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgIU51bWJlci5pc05hTihkYXRlLmdldFRpbWUoKSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = joinLinesWithIndentation\n\n/**\n * @typedef {object} JoinLinesWithIndentationParams\n * @property {string} input The string to split and reformat.\n * @property {string} [ident] The indentation string. Default: `    ` (4 spaces).\n * @property {string} [eol] The end of line sequence to use when rejoining\n * the lines. Default: `'\\n'`.\n */\n\n/**\n * Given a string with line separators, either `\\r\\n` or `\\n`, add indentation\n * to all lines subsequent to the first line and rejoin the lines using an\n * end of line sequence.\n *\n * @param {JoinLinesWithIndentationParams} input\n *\n * @returns {string} A string with lines subsequent to the first indented\n * with the given indentation sequence.\n */\nfunction joinLinesWithIndentation ({ input, ident = '    ', eol = '\\n' }) {\n  const lines = input.split(/\\r?\\n/)\n  for (let i = 1; i < lines.length; i += 1) {\n    lines[i] = ident + lines[i]\n  }\n  return lines.join(eol)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2pvaW4tbGluZXMtd2l0aC1pbmRlbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdDQUFnQztBQUMzQztBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EscUNBQXFDLG1DQUFtQztBQUN4RTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2pvaW4tbGluZXMtd2l0aC1pbmRlbnRhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqb2luTGluZXNXaXRoSW5kZW50YXRpb25cblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBKb2luTGluZXNXaXRoSW5kZW50YXRpb25QYXJhbXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpbnB1dCBUaGUgc3RyaW5nIHRvIHNwbGl0IGFuZCByZWZvcm1hdC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbaWRlbnRdIFRoZSBpbmRlbnRhdGlvbiBzdHJpbmcuIERlZmF1bHQ6IGAgICAgYCAoNCBzcGFjZXMpLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtlb2xdIFRoZSBlbmQgb2YgbGluZSBzZXF1ZW5jZSB0byB1c2Ugd2hlbiByZWpvaW5pbmdcbiAqIHRoZSBsaW5lcy4gRGVmYXVsdDogYCdcXG4nYC5cbiAqL1xuXG4vKipcbiAqIEdpdmVuIGEgc3RyaW5nIHdpdGggbGluZSBzZXBhcmF0b3JzLCBlaXRoZXIgYFxcclxcbmAgb3IgYFxcbmAsIGFkZCBpbmRlbnRhdGlvblxuICogdG8gYWxsIGxpbmVzIHN1YnNlcXVlbnQgdG8gdGhlIGZpcnN0IGxpbmUgYW5kIHJlam9pbiB0aGUgbGluZXMgdXNpbmcgYW5cbiAqIGVuZCBvZiBsaW5lIHNlcXVlbmNlLlxuICpcbiAqIEBwYXJhbSB7Sm9pbkxpbmVzV2l0aEluZGVudGF0aW9uUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgc3RyaW5nIHdpdGggbGluZXMgc3Vic2VxdWVudCB0byB0aGUgZmlyc3QgaW5kZW50ZWRcbiAqIHdpdGggdGhlIGdpdmVuIGluZGVudGF0aW9uIHNlcXVlbmNlLlxuICovXG5mdW5jdGlvbiBqb2luTGluZXNXaXRoSW5kZW50YXRpb24gKHsgaW5wdXQsIGlkZW50ID0gJyAgICAnLCBlb2wgPSAnXFxuJyB9KSB7XG4gIGNvbnN0IGxpbmVzID0gaW5wdXQuc3BsaXQoL1xccj9cXG4vKVxuICBmb3IgKGxldCBpID0gMTsgaSA8IGxpbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgbGluZXNbaV0gPSBpZGVudCArIGxpbmVzW2ldXG4gIH1cbiAgcmV0dXJuIGxpbmVzLmpvaW4oZW9sKVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/noop.js":
/*!****************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/noop.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function noop () {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL25vb3AuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVoiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL25vb3AuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9vcCAoKSB7fVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js":
/*!*********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/parse-factory-options.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = parseFactoryOptions\n\nconst {\n  LEVEL_NAMES\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\nconst colors = __webpack_require__(/*! ../colors */ \"(ssr)/./node_modules/pino-pretty/lib/colors.js\")\nconst handleCustomLevelsOpts = __webpack_require__(/*! ./handle-custom-levels-opts */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\")\nconst handleCustomLevelsNamesOpts = __webpack_require__(/*! ./handle-custom-levels-names-opts */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\")\nconst handleLevelLabelData = __webpack_require__(/*! ./get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\n\n/**\n * A `PrettyContext` is an object to be used by the various functions that\n * process log data. It is derived from the provided {@link PinoPrettyOptions}.\n * It may be used as a `this` context.\n *\n * @typedef {object} PrettyContext\n * @property {string} EOL The escape sequence chosen as the line terminator.\n * @property {string} IDENT The string to use as the indentation sequence.\n * @property {ColorizerFunc} colorizer A configured colorizer function.\n * @property {Array[Array<number, string>]} customColors A set of custom color\n * names associated with level numbers.\n * @property {object} customLevelNames A hash of level numbers to level names,\n * e.g. `{ 30: \"info\" }`.\n * @property {object} customLevels A hash of level names to level numbers,\n * e.g. `{ info: 30 }`.\n * @property {CustomPrettifiers} customPrettifiers A hash of custom prettifier\n * functions.\n * @property {object} customProperties Comprised of `customLevels` and\n * `customLevelNames` if such options are provided.\n * @property {string[]} errorLikeObjectKeys The key names in the log data that\n * should be considered as holding error objects.\n * @property {string[]} errorProps A list of error object keys that should be\n * included in the output.\n * @property {function} getLevelLabelData Pass a numeric level to return [levelLabelString,levelNum]\n * @property {boolean} hideObject Indicates the prettifier should omit objects\n * in the output.\n * @property {string[]} ignoreKeys Set of log data keys to omit.\n * @property {string[]} includeKeys Opposite of `ignoreKeys`.\n * @property {boolean} levelFirst Indicates the level should be printed first.\n * @property {string} levelKey Name of the key in the log data that contains\n * the message.\n * @property {string} levelLabel Format token to represent the position of the\n * level name in the output string.\n * @property {MessageFormatString|MessageFormatFunction} messageFormat\n * @property {string} messageKey Name of the key in the log data that contains\n * the message.\n * @property {string|number} minimumLevel The minimum log level to process\n * and output.\n * @property {ColorizerFunc} objectColorizer\n * @property {boolean} singleLine Indicates objects should be printed on a\n * single output line.\n * @property {string} timestampKey The name of the key in the log data that\n * contains the log timestamp.\n * @property {boolean} translateTime Indicates if timestamps should be\n * translated to a human-readable string.\n * @property {boolean} useOnlyCustomProps\n */\n\n/**\n * @param {PinoPrettyOptions} options The user supplied object of options.\n *\n * @returns {PrettyContext}\n */\nfunction parseFactoryOptions (options) {\n  const EOL = options.crlf ? '\\r\\n' : '\\n'\n  const IDENT = '    '\n  const {\n    customPrettifiers,\n    errorLikeObjectKeys,\n    hideObject,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    singleLine,\n    timestampKey,\n    translateTime\n  } = options\n  const errorProps = options.errorProps.split(',')\n  const useOnlyCustomProps = typeof options.useOnlyCustomProps === 'boolean'\n    ? options.useOnlyCustomProps\n    : (options.useOnlyCustomProps === 'true')\n  const customLevels = handleCustomLevelsOpts(options.customLevels)\n  const customLevelNames = handleCustomLevelsNamesOpts(options.customLevels)\n  const getLevelLabelData = handleLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)\n\n  let customColors\n  if (options.customColors) {\n    if (typeof options.customColors === 'string') {\n      customColors = options.customColors.split(',').reduce((agg, value) => {\n        const [level, color] = value.split(':')\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else if (typeof options.customColors === 'object') {\n      customColors = Object.keys(options.customColors).reduce((agg, value) => {\n        const [level, color] = [value, options.customColors[value]]\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else {\n      throw new Error('options.customColors must be of type string or object.')\n    }\n  }\n\n  const customProperties = { customLevels, customLevelNames }\n  if (useOnlyCustomProps === true && !options.customLevels) {\n    customProperties.customLevels = undefined\n    customProperties.customLevelNames = undefined\n  }\n\n  const includeKeys = options.include !== undefined\n    ? new Set(options.include.split(','))\n    : undefined\n  const ignoreKeys = (!includeKeys && options.ignore)\n    ? new Set(options.ignore.split(','))\n    : undefined\n\n  const colorizer = colors(options.colorize, customColors, useOnlyCustomProps)\n  const objectColorizer = options.colorizeObjects\n    ? colorizer\n    : colors(false, [], false)\n\n  return {\n    EOL,\n    IDENT,\n    colorizer,\n    customColors,\n    customLevelNames,\n    customLevels,\n    customPrettifiers,\n    customProperties,\n    errorLikeObjectKeys,\n    errorProps,\n    getLevelLabelData,\n    hideObject,\n    ignoreKeys,\n    includeKeys,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    objectColorizer,\n    singleLine,\n    timestampKey,\n    translateTime,\n    useOnlyCustomProps\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-error-log.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyErrorLog\n\nconst {\n  LOGGER_KEYS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst isObject = __webpack_require__(/*! ./is-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\")\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\nconst prettifyObject = __webpack_require__(/*! ./prettify-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\")\n\n/**\n * @typedef {object} PrettifyErrorLogParams\n * @property {object} log The error log to prettify.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Given a log object that has a `type: 'Error'` key, prettify the object and\n * return the result. In other\n *\n * @param {PrettifyErrorLogParams} input\n *\n * @returns {string} A string that represents the prettified error log.\n */\nfunction prettifyErrorLog ({ log, context }) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    errorProps: errorProperties,\n    messageKey\n  } = context\n  const stack = log.stack\n  const joinedLines = joinLinesWithIndentation({ input: stack, ident, eol })\n  let result = `${ident}${joinedLines}${eol}`\n\n  if (errorProperties.length > 0) {\n    const excludeProperties = LOGGER_KEYS.concat(messageKey, 'type', 'stack')\n    let propertiesToPrint\n    if (errorProperties[0] === '*') {\n      // Print all sibling properties except for the standard exclusions.\n      propertiesToPrint = Object.keys(log).filter(k => excludeProperties.includes(k) === false)\n    } else {\n      // Print only specified properties unless the property is a standard exclusion.\n      propertiesToPrint = errorProperties.filter(k => excludeProperties.includes(k) === false)\n    }\n\n    for (let i = 0; i < propertiesToPrint.length; i += 1) {\n      const key = propertiesToPrint[i]\n      if (key in log === false) continue\n      if (isObject(log[key])) {\n        // The nested object may have \"logger\" type keys but since they are not\n        // at the root level of the object being processed, we want to print them.\n        // Thus, we invoke with `excludeLoggerKeys: false`.\n        const prettifiedObject = prettifyObject({\n          log: log[key],\n          excludeLoggerKeys: false,\n          context: {\n            ...context,\n            IDENT: ident + ident\n          }\n        })\n        result = `${result}${ident}${key}: {${eol}${prettifiedObject}${ident}}${eol}`\n        continue\n      }\n      result = `${result}${ident}${key}: ${log[key]}${eol}`\n    }\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLWxvZy5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsdUVBQWM7O0FBRTFCLGlCQUFpQixtQkFBTyxDQUFDLDRFQUFhO0FBQ3RDLGlDQUFpQyxtQkFBTyxDQUFDLGdIQUErQjtBQUN4RSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBbUI7O0FBRWxEO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QixjQUFjLGVBQWU7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLGlEQUFpRCwwQkFBMEI7QUFDM0Usa0JBQWtCLE1BQU0sRUFBRSxZQUFZLEVBQUUsSUFBSTs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsOEJBQThCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULG9CQUFvQixPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksR0FBRyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsSUFBSTtBQUNwRjtBQUNBO0FBQ0Esa0JBQWtCLE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBSSxJQUFJLFNBQVMsRUFBRSxJQUFJO0FBQzFEO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phc29uYy9EZXNrdG9wL0VpZ2VuUHJvdGVjdGVkQVZTSG9vay9laWdlbi1wcm90ZWN0ZWQtYXZzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvcHJldHRpZnktZXJyb3ItbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXR0aWZ5RXJyb3JMb2dcblxuY29uc3Qge1xuICBMT0dHRVJfS0VZU1xufSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpXG5cbmNvbnN0IGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pcy1vYmplY3QnKVxuY29uc3Qgam9pbkxpbmVzV2l0aEluZGVudGF0aW9uID0gcmVxdWlyZSgnLi9qb2luLWxpbmVzLXdpdGgtaW5kZW50YXRpb24nKVxuY29uc3QgcHJldHRpZnlPYmplY3QgPSByZXF1aXJlKCcuL3ByZXR0aWZ5LW9iamVjdCcpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlFcnJvckxvZ1BhcmFtc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGxvZyBUaGUgZXJyb3IgbG9nIHRvIHByZXR0aWZ5LlxuICogQHByb3BlcnR5IHtQcmV0dHlDb250ZXh0fSBjb250ZXh0IFRoZSBjb250ZXh0IG9iamVjdCBidWlsdCBmcm9tIHBhcnNpbmdcbiAqIHRoZSBvcHRpb25zLlxuICovXG5cbi8qKlxuICogR2l2ZW4gYSBsb2cgb2JqZWN0IHRoYXQgaGFzIGEgYHR5cGU6ICdFcnJvcidgIGtleSwgcHJldHRpZnkgdGhlIG9iamVjdCBhbmRcbiAqIHJldHVybiB0aGUgcmVzdWx0LiBJbiBvdGhlclxuICpcbiAqIEBwYXJhbSB7UHJldHRpZnlFcnJvckxvZ1BhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIHByZXR0aWZpZWQgZXJyb3IgbG9nLlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeUVycm9yTG9nICh7IGxvZywgY29udGV4dCB9KSB7XG4gIGNvbnN0IHtcbiAgICBFT0w6IGVvbCxcbiAgICBJREVOVDogaWRlbnQsXG4gICAgZXJyb3JQcm9wczogZXJyb3JQcm9wZXJ0aWVzLFxuICAgIG1lc3NhZ2VLZXlcbiAgfSA9IGNvbnRleHRcbiAgY29uc3Qgc3RhY2sgPSBsb2cuc3RhY2tcbiAgY29uc3Qgam9pbmVkTGluZXMgPSBqb2luTGluZXNXaXRoSW5kZW50YXRpb24oeyBpbnB1dDogc3RhY2ssIGlkZW50LCBlb2wgfSlcbiAgbGV0IHJlc3VsdCA9IGAke2lkZW50fSR7am9pbmVkTGluZXN9JHtlb2x9YFxuXG4gIGlmIChlcnJvclByb3BlcnRpZXMubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IGV4Y2x1ZGVQcm9wZXJ0aWVzID0gTE9HR0VSX0tFWVMuY29uY2F0KG1lc3NhZ2VLZXksICd0eXBlJywgJ3N0YWNrJylcbiAgICBsZXQgcHJvcGVydGllc1RvUHJpbnRcbiAgICBpZiAoZXJyb3JQcm9wZXJ0aWVzWzBdID09PSAnKicpIHtcbiAgICAgIC8vIFByaW50IGFsbCBzaWJsaW5nIHByb3BlcnRpZXMgZXhjZXB0IGZvciB0aGUgc3RhbmRhcmQgZXhjbHVzaW9ucy5cbiAgICAgIHByb3BlcnRpZXNUb1ByaW50ID0gT2JqZWN0LmtleXMobG9nKS5maWx0ZXIoayA9PiBleGNsdWRlUHJvcGVydGllcy5pbmNsdWRlcyhrKSA9PT0gZmFsc2UpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFByaW50IG9ubHkgc3BlY2lmaWVkIHByb3BlcnRpZXMgdW5sZXNzIHRoZSBwcm9wZXJ0eSBpcyBhIHN0YW5kYXJkIGV4Y2x1c2lvbi5cbiAgICAgIHByb3BlcnRpZXNUb1ByaW50ID0gZXJyb3JQcm9wZXJ0aWVzLmZpbHRlcihrID0+IGV4Y2x1ZGVQcm9wZXJ0aWVzLmluY2x1ZGVzKGspID09PSBmYWxzZSlcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXNUb1ByaW50Lmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCBrZXkgPSBwcm9wZXJ0aWVzVG9QcmludFtpXVxuICAgICAgaWYgKGtleSBpbiBsb2cgPT09IGZhbHNlKSBjb250aW51ZVxuICAgICAgaWYgKGlzT2JqZWN0KGxvZ1trZXldKSkge1xuICAgICAgICAvLyBUaGUgbmVzdGVkIG9iamVjdCBtYXkgaGF2ZSBcImxvZ2dlclwiIHR5cGUga2V5cyBidXQgc2luY2UgdGhleSBhcmUgbm90XG4gICAgICAgIC8vIGF0IHRoZSByb290IGxldmVsIG9mIHRoZSBvYmplY3QgYmVpbmcgcHJvY2Vzc2VkLCB3ZSB3YW50IHRvIHByaW50IHRoZW0uXG4gICAgICAgIC8vIFRodXMsIHdlIGludm9rZSB3aXRoIGBleGNsdWRlTG9nZ2VyS2V5czogZmFsc2VgLlxuICAgICAgICBjb25zdCBwcmV0dGlmaWVkT2JqZWN0ID0gcHJldHRpZnlPYmplY3Qoe1xuICAgICAgICAgIGxvZzogbG9nW2tleV0sXG4gICAgICAgICAgZXhjbHVkZUxvZ2dlcktleXM6IGZhbHNlLFxuICAgICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICAgIC4uLmNvbnRleHQsXG4gICAgICAgICAgICBJREVOVDogaWRlbnQgKyBpZGVudFxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmVzdWx0ID0gYCR7cmVzdWx0fSR7aWRlbnR9JHtrZXl9OiB7JHtlb2x9JHtwcmV0dGlmaWVkT2JqZWN0fSR7aWRlbnR9fSR7ZW9sfWBcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cbiAgICAgIHJlc3VsdCA9IGAke3Jlc3VsdH0ke2lkZW50fSR7a2V5fTogJHtsb2dba2V5XX0ke2VvbH1gXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js":
/*!**************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-error.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyError\n\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\n\n/**\n * @typedef {object} PrettifyErrorParams\n * @property {string} keyName The key assigned to this error in the log object.\n * @property {string} lines The STRINGIFIED error. If the error field has a\n *  custom prettifier, that should be pre-applied as well.\n * @property {string} ident The indentation sequence to use.\n * @property {string} eol The EOL sequence to use.\n */\n\n/**\n * Prettifies an error string into a multi-line format.\n *\n * @param {PrettifyErrorParams} input\n *\n * @returns {string}\n */\nfunction prettifyError ({ keyName, lines, eol, ident }) {\n  let result = ''\n  const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n  const splitLines = `${ident}${keyName}: ${joinedLines}${eol}`.split(eol)\n\n  for (let j = 0; j < splitLines.length; j += 1) {\n    if (j !== 0) result += eol\n\n    const line = splitLines[j]\n    if (/^\\s*\"stack\"/.test(line)) {\n      const matches = /^(\\s*\"stack\":)\\s*(\".*\"),?$/.exec(line)\n      /* istanbul ignore else */\n      if (matches && matches.length === 3) {\n        const indentSize = /^\\s*/.exec(line)[0].length + 4\n        const indentation = ' '.repeat(indentSize)\n        const stackMessage = matches[2]\n        result += matches[1] + eol + indentation + JSON.parse(stackMessage).replace(/\\n/g, eol + indentation)\n      } else {\n        result += line\n      }\n    } else {\n      result += line\n    }\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLGlDQUFpQyxtQkFBTyxDQUFDLGdIQUErQjs7QUFFeEU7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSxhQUFhO0FBQ2I7QUFDQSwwQkFBMEIsNEJBQTRCO0FBQ3REO0FBQ0EsaURBQWlELDBCQUEwQjtBQUMzRSx3QkFBd0IsTUFBTSxFQUFFLFFBQVEsSUFBSSxZQUFZLEVBQUUsSUFBSTs7QUFFOUQsa0JBQWtCLHVCQUF1QjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phc29uYy9EZXNrdG9wL0VpZ2VuUHJvdGVjdGVkQVZTSG9vay9laWdlbi1wcm90ZWN0ZWQtYXZzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvcHJldHRpZnktZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcHJldHRpZnlFcnJvclxuXG5jb25zdCBqb2luTGluZXNXaXRoSW5kZW50YXRpb24gPSByZXF1aXJlKCcuL2pvaW4tbGluZXMtd2l0aC1pbmRlbnRhdGlvbicpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlFcnJvclBhcmFtc1xuICogQHByb3BlcnR5IHtzdHJpbmd9IGtleU5hbWUgVGhlIGtleSBhc3NpZ25lZCB0byB0aGlzIGVycm9yIGluIHRoZSBsb2cgb2JqZWN0LlxuICogQHByb3BlcnR5IHtzdHJpbmd9IGxpbmVzIFRoZSBTVFJJTkdJRklFRCBlcnJvci4gSWYgdGhlIGVycm9yIGZpZWxkIGhhcyBhXG4gKiAgY3VzdG9tIHByZXR0aWZpZXIsIHRoYXQgc2hvdWxkIGJlIHByZS1hcHBsaWVkIGFzIHdlbGwuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRlbnQgVGhlIGluZGVudGF0aW9uIHNlcXVlbmNlIHRvIHVzZS5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBlb2wgVGhlIEVPTCBzZXF1ZW5jZSB0byB1c2UuXG4gKi9cblxuLyoqXG4gKiBQcmV0dGlmaWVzIGFuIGVycm9yIHN0cmluZyBpbnRvIGEgbXVsdGktbGluZSBmb3JtYXQuXG4gKlxuICogQHBhcmFtIHtQcmV0dGlmeUVycm9yUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIHByZXR0aWZ5RXJyb3IgKHsga2V5TmFtZSwgbGluZXMsIGVvbCwgaWRlbnQgfSkge1xuICBsZXQgcmVzdWx0ID0gJydcbiAgY29uc3Qgam9pbmVkTGluZXMgPSBqb2luTGluZXNXaXRoSW5kZW50YXRpb24oeyBpbnB1dDogbGluZXMsIGlkZW50LCBlb2wgfSlcbiAgY29uc3Qgc3BsaXRMaW5lcyA9IGAke2lkZW50fSR7a2V5TmFtZX06ICR7am9pbmVkTGluZXN9JHtlb2x9YC5zcGxpdChlb2wpXG5cbiAgZm9yIChsZXQgaiA9IDA7IGogPCBzcGxpdExpbmVzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgaWYgKGogIT09IDApIHJlc3VsdCArPSBlb2xcblxuICAgIGNvbnN0IGxpbmUgPSBzcGxpdExpbmVzW2pdXG4gICAgaWYgKC9eXFxzKlwic3RhY2tcIi8udGVzdChsaW5lKSkge1xuICAgICAgY29uc3QgbWF0Y2hlcyA9IC9eKFxccypcInN0YWNrXCI6KVxccyooXCIuKlwiKSw/JC8uZXhlYyhsaW5lKVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgIGlmIChtYXRjaGVzICYmIG1hdGNoZXMubGVuZ3RoID09PSAzKSB7XG4gICAgICAgIGNvbnN0IGluZGVudFNpemUgPSAvXlxccyovLmV4ZWMobGluZSlbMF0ubGVuZ3RoICsgNFxuICAgICAgICBjb25zdCBpbmRlbnRhdGlvbiA9ICcgJy5yZXBlYXQoaW5kZW50U2l6ZSlcbiAgICAgICAgY29uc3Qgc3RhY2tNZXNzYWdlID0gbWF0Y2hlc1syXVxuICAgICAgICByZXN1bHQgKz0gbWF0Y2hlc1sxXSArIGVvbCArIGluZGVudGF0aW9uICsgSlNPTi5wYXJzZShzdGFja01lc3NhZ2UpLnJlcGxhY2UoL1xcbi9nLCBlb2wgKyBpbmRlbnRhdGlvbilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCArPSBsaW5lXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCArPSBsaW5lXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js":
/*!**************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-level.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyLevel\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\n\n/**\n * @typedef {object} PrettifyLevelParams\n * @property {object} log The log object.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Checks if the passed in log has a `level` value and returns a prettified\n * string for that level if so.\n *\n * @param {PrettifyLevelParams} input\n *\n * @returns {undefined|string} If `log` does not have a `level` property then\n * `undefined` will be returned. Otherwise, a string from the specified\n * `colorizer` is returned.\n */\nfunction prettifyLevel ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    customLevelNames,\n    levelKey,\n    getLevelLabelData\n  } = context\n  const prettifier = context.customPrettifiers?.level\n  const output = getPropertyValue(log, levelKey)\n  if (output === undefined) return undefined\n  const labelColorized = colorizer(output, { customLevels, customLevelNames })\n  if (prettifier) {\n    const [label] = getLevelLabelData(output)\n    return prettifier(output, levelKey, log, { label, labelColorized, colors: colorizer.colors })\n  }\n  return labelColorized\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWxldmVsLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLHlCQUF5QixtQkFBTyxDQUFDLDhGQUFzQjs7QUFFdkQ7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsY0FBYztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGdDQUFnQztBQUM3RTtBQUNBO0FBQ0EsK0NBQStDLGlEQUFpRDtBQUNoRztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWxldmVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXR0aWZ5TGV2ZWxcblxuY29uc3QgZ2V0UHJvcGVydHlWYWx1ZSA9IHJlcXVpcmUoJy4vZ2V0LXByb3BlcnR5LXZhbHVlJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeUxldmVsUGFyYW1zXG4gKiBAcHJvcGVydHkge29iamVjdH0gbG9nIFRoZSBsb2cgb2JqZWN0LlxuICogQHByb3BlcnR5IHtQcmV0dHlDb250ZXh0fSBjb250ZXh0IFRoZSBjb250ZXh0IG9iamVjdCBidWlsdCBmcm9tIHBhcnNpbmdcbiAqIHRoZSBvcHRpb25zLlxuICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBwYXNzZWQgaW4gbG9nIGhhcyBhIGBsZXZlbGAgdmFsdWUgYW5kIHJldHVybnMgYSBwcmV0dGlmaWVkXG4gKiBzdHJpbmcgZm9yIHRoYXQgbGV2ZWwgaWYgc28uXG4gKlxuICogQHBhcmFtIHtQcmV0dGlmeUxldmVsUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR8c3RyaW5nfSBJZiBgbG9nYCBkb2VzIG5vdCBoYXZlIGEgYGxldmVsYCBwcm9wZXJ0eSB0aGVuXG4gKiBgdW5kZWZpbmVkYCB3aWxsIGJlIHJldHVybmVkLiBPdGhlcndpc2UsIGEgc3RyaW5nIGZyb20gdGhlIHNwZWNpZmllZFxuICogYGNvbG9yaXplcmAgaXMgcmV0dXJuZWQuXG4gKi9cbmZ1bmN0aW9uIHByZXR0aWZ5TGV2ZWwgKHsgbG9nLCBjb250ZXh0IH0pIHtcbiAgY29uc3Qge1xuICAgIGNvbG9yaXplcixcbiAgICBjdXN0b21MZXZlbHMsXG4gICAgY3VzdG9tTGV2ZWxOYW1lcyxcbiAgICBsZXZlbEtleSxcbiAgICBnZXRMZXZlbExhYmVsRGF0YVxuICB9ID0gY29udGV4dFxuICBjb25zdCBwcmV0dGlmaWVyID0gY29udGV4dC5jdXN0b21QcmV0dGlmaWVycz8ubGV2ZWxcbiAgY29uc3Qgb3V0cHV0ID0gZ2V0UHJvcGVydHlWYWx1ZShsb2csIGxldmVsS2V5KVxuICBpZiAob3V0cHV0ID09PSB1bmRlZmluZWQpIHJldHVybiB1bmRlZmluZWRcbiAgY29uc3QgbGFiZWxDb2xvcml6ZWQgPSBjb2xvcml6ZXIob3V0cHV0LCB7IGN1c3RvbUxldmVscywgY3VzdG9tTGV2ZWxOYW1lcyB9KVxuICBpZiAocHJldHRpZmllcikge1xuICAgIGNvbnN0IFtsYWJlbF0gPSBnZXRMZXZlbExhYmVsRGF0YShvdXRwdXQpXG4gICAgcmV0dXJuIHByZXR0aWZpZXIob3V0cHV0LCBsZXZlbEtleSwgbG9nLCB7IGxhYmVsLCBsYWJlbENvbG9yaXplZCwgY29sb3JzOiBjb2xvcml6ZXIuY29sb3JzIH0pXG4gIH1cbiAgcmV0dXJuIGxhYmVsQ29sb3JpemVkXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js":
/*!****************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-message.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyMessage\n\nconst {\n  LEVELS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\nconst interpretConditionals = __webpack_require__(/*! ./interpret-conditionals */ \"(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\")\n\n/**\n * @typedef {object} PrettifyMessageParams\n * @property {object} log The log object with the message to colorize.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a message string if the given `log` has a message property.\n *\n * @param {PrettifyMessageParams} input\n *\n * @returns {undefined|string} If the message key is not found, or the message\n * key is not a string, then `undefined` will be returned. Otherwise, a string\n * that is the prettified message.\n */\nfunction prettifyMessage ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    useOnlyCustomProps\n  } = context\n  if (messageFormat && typeof messageFormat === 'string') {\n    const parsedMessageFormat = interpretConditionals(messageFormat, log)\n\n    const message = String(parsedMessageFormat).replace(\n      /{([^{}]+)}/g,\n      function (match, p1) {\n        // return log level as string instead of int\n        let level\n        if (p1 === levelLabel && (level = getPropertyValue(log, levelKey)) !== undefined) {\n          const condition = useOnlyCustomProps ? customLevels === undefined : customLevels[level] === undefined\n          return condition ? LEVELS[level] : customLevels[level]\n        }\n\n        // Parse nested key access, e.g. `{keyA.subKeyB}`.\n        return getPropertyValue(log, p1) || ''\n      })\n    return colorizer.message(message)\n  }\n  if (messageFormat && typeof messageFormat === 'function') {\n    const msg = messageFormat(log, messageKey, levelLabel, { colors: colorizer.colors })\n    return colorizer.message(msg)\n  }\n  if (messageKey in log === false) return undefined\n  if (typeof log[messageKey] !== 'string' && typeof log[messageKey] !== 'number' && typeof log[messageKey] !== 'boolean') return undefined\n  return colorizer.message(log[messageKey])\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBLEVBQUUsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUUxQix5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBc0I7QUFDdkQsOEJBQThCLG1CQUFPLENBQUMsc0dBQTBCOztBQUVoRTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxlQUFlO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEM7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsY0FBYztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSxRQUFRLEtBQUssSUFBSTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkMsYUFBYTtBQUN4RDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsMEJBQTBCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phc29uYy9EZXNrdG9wL0VpZ2VuUHJvdGVjdGVkQVZTSG9vay9laWdlbi1wcm90ZWN0ZWQtYXZzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvcHJldHRpZnktbWVzc2FnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcmV0dGlmeU1lc3NhZ2VcblxuY29uc3Qge1xuICBMRVZFTFNcbn0gPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKVxuXG5jb25zdCBnZXRQcm9wZXJ0eVZhbHVlID0gcmVxdWlyZSgnLi9nZXQtcHJvcGVydHktdmFsdWUnKVxuY29uc3QgaW50ZXJwcmV0Q29uZGl0aW9uYWxzID0gcmVxdWlyZSgnLi9pbnRlcnByZXQtY29uZGl0aW9uYWxzJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeU1lc3NhZ2VQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3Qgd2l0aCB0aGUgbWVzc2FnZSB0byBjb2xvcml6ZS5cbiAqIEBwcm9wZXJ0eSB7UHJldHR5Q29udGV4dH0gY29udGV4dCBUaGUgY29udGV4dCBvYmplY3QgYnVpbHQgZnJvbSBwYXJzaW5nXG4gKiB0aGUgb3B0aW9ucy5cbiAqL1xuXG4vKipcbiAqIFByZXR0aWZpZXMgYSBtZXNzYWdlIHN0cmluZyBpZiB0aGUgZ2l2ZW4gYGxvZ2AgaGFzIGEgbWVzc2FnZSBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge1ByZXR0aWZ5TWVzc2FnZVBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfHN0cmluZ30gSWYgdGhlIG1lc3NhZ2Uga2V5IGlzIG5vdCBmb3VuZCwgb3IgdGhlIG1lc3NhZ2VcbiAqIGtleSBpcyBub3QgYSBzdHJpbmcsIHRoZW4gYHVuZGVmaW5lZGAgd2lsbCBiZSByZXR1cm5lZC4gT3RoZXJ3aXNlLCBhIHN0cmluZ1xuICogdGhhdCBpcyB0aGUgcHJldHRpZmllZCBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeU1lc3NhZ2UgKHsgbG9nLCBjb250ZXh0IH0pIHtcbiAgY29uc3Qge1xuICAgIGNvbG9yaXplcixcbiAgICBjdXN0b21MZXZlbHMsXG4gICAgbGV2ZWxLZXksXG4gICAgbGV2ZWxMYWJlbCxcbiAgICBtZXNzYWdlRm9ybWF0LFxuICAgIG1lc3NhZ2VLZXksXG4gICAgdXNlT25seUN1c3RvbVByb3BzXG4gIH0gPSBjb250ZXh0XG4gIGlmIChtZXNzYWdlRm9ybWF0ICYmIHR5cGVvZiBtZXNzYWdlRm9ybWF0ID09PSAnc3RyaW5nJykge1xuICAgIGNvbnN0IHBhcnNlZE1lc3NhZ2VGb3JtYXQgPSBpbnRlcnByZXRDb25kaXRpb25hbHMobWVzc2FnZUZvcm1hdCwgbG9nKVxuXG4gICAgY29uc3QgbWVzc2FnZSA9IFN0cmluZyhwYXJzZWRNZXNzYWdlRm9ybWF0KS5yZXBsYWNlKFxuICAgICAgL3soW157fV0rKX0vZyxcbiAgICAgIGZ1bmN0aW9uIChtYXRjaCwgcDEpIHtcbiAgICAgICAgLy8gcmV0dXJuIGxvZyBsZXZlbCBhcyBzdHJpbmcgaW5zdGVhZCBvZiBpbnRcbiAgICAgICAgbGV0IGxldmVsXG4gICAgICAgIGlmIChwMSA9PT0gbGV2ZWxMYWJlbCAmJiAobGV2ZWwgPSBnZXRQcm9wZXJ0eVZhbHVlKGxvZywgbGV2ZWxLZXkpKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc3QgY29uZGl0aW9uID0gdXNlT25seUN1c3RvbVByb3BzID8gY3VzdG9tTGV2ZWxzID09PSB1bmRlZmluZWQgOiBjdXN0b21MZXZlbHNbbGV2ZWxdID09PSB1bmRlZmluZWRcbiAgICAgICAgICByZXR1cm4gY29uZGl0aW9uID8gTEVWRUxTW2xldmVsXSA6IGN1c3RvbUxldmVsc1tsZXZlbF1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBhcnNlIG5lc3RlZCBrZXkgYWNjZXNzLCBlLmcuIGB7a2V5QS5zdWJLZXlCfWAuXG4gICAgICAgIHJldHVybiBnZXRQcm9wZXJ0eVZhbHVlKGxvZywgcDEpIHx8ICcnXG4gICAgICB9KVxuICAgIHJldHVybiBjb2xvcml6ZXIubWVzc2FnZShtZXNzYWdlKVxuICB9XG4gIGlmIChtZXNzYWdlRm9ybWF0ICYmIHR5cGVvZiBtZXNzYWdlRm9ybWF0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgbXNnID0gbWVzc2FnZUZvcm1hdChsb2csIG1lc3NhZ2VLZXksIGxldmVsTGFiZWwsIHsgY29sb3JzOiBjb2xvcml6ZXIuY29sb3JzIH0pXG4gICAgcmV0dXJuIGNvbG9yaXplci5tZXNzYWdlKG1zZylcbiAgfVxuICBpZiAobWVzc2FnZUtleSBpbiBsb2cgPT09IGZhbHNlKSByZXR1cm4gdW5kZWZpbmVkXG4gIGlmICh0eXBlb2YgbG9nW21lc3NhZ2VLZXldICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgbG9nW21lc3NhZ2VLZXldICE9PSAnbnVtYmVyJyAmJiB0eXBlb2YgbG9nW21lc3NhZ2VLZXldICE9PSAnYm9vbGVhbicpIHJldHVybiB1bmRlZmluZWRcbiAgcmV0dXJuIGNvbG9yaXplci5tZXNzYWdlKGxvZ1ttZXNzYWdlS2V5XSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js":
/*!*****************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-metadata.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = prettifyMetadata\n\n/**\n * @typedef {object} PrettifyMetadataParams\n * @property {object} log The log that may or may not contain metadata to\n * be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies metadata that is usually present in a Pino log line. It looks for\n * fields `name`, `pid`, `hostname`, and `caller` and returns a formatted string using\n * the fields it finds.\n *\n * @param {PrettifyMetadataParams} input\n *\n * @returns {undefined|string} If no metadata is found then `undefined` is\n * returned. Otherwise, a string of prettified metadata is returned.\n */\nfunction prettifyMetadata ({ log, context }) {\n  const { customPrettifiers: prettifiers, colorizer } = context\n  let line = ''\n\n  if (log.name || log.pid || log.hostname) {\n    line += '('\n\n    if (log.name) {\n      line += prettifiers.name\n        ? prettifiers.name(log.name, 'name', log, { colors: colorizer.colors })\n        : log.name\n    }\n\n    if (log.pid) {\n      const prettyPid = prettifiers.pid\n        ? prettifiers.pid(log.pid, 'pid', log, { colors: colorizer.colors })\n        : log.pid\n      if (log.name && log.pid) {\n        line += '/' + prettyPid\n      } else {\n        line += prettyPid\n      }\n    }\n\n    if (log.hostname) {\n      // If `pid` and `name` were in the ignore keys list then we don't need\n      // the leading space.\n      const prettyHostname = prettifiers.hostname\n        ? prettifiers.hostname(log.hostname, 'hostname', log, { colors: colorizer.colors })\n        : log.hostname\n\n      line += `${line === '(' ? 'on' : ' on'} ${prettyHostname}`\n    }\n\n    line += ')'\n  }\n\n  if (log.caller) {\n    const prettyCaller = prettifiers.caller\n      ? prettifiers.caller(log.caller, 'caller', log, { colors: colorizer.colors })\n      : log.caller\n\n    line += `${line === '' ? '' : ' '}<${prettyCaller}>`\n  }\n\n  if (line === '') {\n    return undefined\n  } else {\n    return line\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQztBQUNBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQyxVQUFVLDRDQUE0QztBQUN0RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvREFBb0QsMEJBQTBCO0FBQzlFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlEQUFpRCwwQkFBMEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSwwQkFBMEI7QUFDMUY7O0FBRUEsaUJBQWlCLDZCQUE2QixFQUFFLGVBQWU7QUFDL0Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0RBQXdELDBCQUEwQjtBQUNsRjs7QUFFQSxlQUFlLHVCQUF1QixHQUFHLGFBQWE7QUFDdEQ7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1ldGFkYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXR0aWZ5TWV0YWRhdGFcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeU1ldGFkYXRhUGFyYW1zXG4gKiBAcHJvcGVydHkge29iamVjdH0gbG9nIFRoZSBsb2cgdGhhdCBtYXkgb3IgbWF5IG5vdCBjb250YWluIG1ldGFkYXRhIHRvXG4gKiBiZSBwcmV0dGlmaWVkLlxuICogQHByb3BlcnR5IHtQcmV0dHlDb250ZXh0fSBjb250ZXh0IFRoZSBjb250ZXh0IG9iamVjdCBidWlsdCBmcm9tIHBhcnNpbmdcbiAqIHRoZSBvcHRpb25zLlxuICovXG5cbi8qKlxuICogUHJldHRpZmllcyBtZXRhZGF0YSB0aGF0IGlzIHVzdWFsbHkgcHJlc2VudCBpbiBhIFBpbm8gbG9nIGxpbmUuIEl0IGxvb2tzIGZvclxuICogZmllbGRzIGBuYW1lYCwgYHBpZGAsIGBob3N0bmFtZWAsIGFuZCBgY2FsbGVyYCBhbmQgcmV0dXJucyBhIGZvcm1hdHRlZCBzdHJpbmcgdXNpbmdcbiAqIHRoZSBmaWVsZHMgaXQgZmluZHMuXG4gKlxuICogQHBhcmFtIHtQcmV0dGlmeU1ldGFkYXRhUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR8c3RyaW5nfSBJZiBubyBtZXRhZGF0YSBpcyBmb3VuZCB0aGVuIGB1bmRlZmluZWRgIGlzXG4gKiByZXR1cm5lZC4gT3RoZXJ3aXNlLCBhIHN0cmluZyBvZiBwcmV0dGlmaWVkIG1ldGFkYXRhIGlzIHJldHVybmVkLlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeU1ldGFkYXRhICh7IGxvZywgY29udGV4dCB9KSB7XG4gIGNvbnN0IHsgY3VzdG9tUHJldHRpZmllcnM6IHByZXR0aWZpZXJzLCBjb2xvcml6ZXIgfSA9IGNvbnRleHRcbiAgbGV0IGxpbmUgPSAnJ1xuXG4gIGlmIChsb2cubmFtZSB8fCBsb2cucGlkIHx8IGxvZy5ob3N0bmFtZSkge1xuICAgIGxpbmUgKz0gJygnXG5cbiAgICBpZiAobG9nLm5hbWUpIHtcbiAgICAgIGxpbmUgKz0gcHJldHRpZmllcnMubmFtZVxuICAgICAgICA/IHByZXR0aWZpZXJzLm5hbWUobG9nLm5hbWUsICduYW1lJywgbG9nLCB7IGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICAgICAgICA6IGxvZy5uYW1lXG4gICAgfVxuXG4gICAgaWYgKGxvZy5waWQpIHtcbiAgICAgIGNvbnN0IHByZXR0eVBpZCA9IHByZXR0aWZpZXJzLnBpZFxuICAgICAgICA/IHByZXR0aWZpZXJzLnBpZChsb2cucGlkLCAncGlkJywgbG9nLCB7IGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICAgICAgICA6IGxvZy5waWRcbiAgICAgIGlmIChsb2cubmFtZSAmJiBsb2cucGlkKSB7XG4gICAgICAgIGxpbmUgKz0gJy8nICsgcHJldHR5UGlkXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaW5lICs9IHByZXR0eVBpZFxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChsb2cuaG9zdG5hbWUpIHtcbiAgICAgIC8vIElmIGBwaWRgIGFuZCBgbmFtZWAgd2VyZSBpbiB0aGUgaWdub3JlIGtleXMgbGlzdCB0aGVuIHdlIGRvbid0IG5lZWRcbiAgICAgIC8vIHRoZSBsZWFkaW5nIHNwYWNlLlxuICAgICAgY29uc3QgcHJldHR5SG9zdG5hbWUgPSBwcmV0dGlmaWVycy5ob3N0bmFtZVxuICAgICAgICA/IHByZXR0aWZpZXJzLmhvc3RuYW1lKGxvZy5ob3N0bmFtZSwgJ2hvc3RuYW1lJywgbG9nLCB7IGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICAgICAgICA6IGxvZy5ob3N0bmFtZVxuXG4gICAgICBsaW5lICs9IGAke2xpbmUgPT09ICcoJyA/ICdvbicgOiAnIG9uJ30gJHtwcmV0dHlIb3N0bmFtZX1gXG4gICAgfVxuXG4gICAgbGluZSArPSAnKSdcbiAgfVxuXG4gIGlmIChsb2cuY2FsbGVyKSB7XG4gICAgY29uc3QgcHJldHR5Q2FsbGVyID0gcHJldHRpZmllcnMuY2FsbGVyXG4gICAgICA/IHByZXR0aWZpZXJzLmNhbGxlcihsb2cuY2FsbGVyLCAnY2FsbGVyJywgbG9nLCB7IGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICAgICAgOiBsb2cuY2FsbGVyXG5cbiAgICBsaW5lICs9IGAke2xpbmUgPT09ICcnID8gJycgOiAnICd9PCR7cHJldHR5Q2FsbGVyfT5gXG4gIH1cblxuICBpZiAobGluZSA9PT0gJycpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGxpbmVcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js":
/*!***************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-object.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyObject\n\nconst {\n  LOGGER_KEYS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst stringifySafe = __webpack_require__(/*! fast-safe-stringify */ \"(ssr)/./node_modules/fast-safe-stringify/index.js\")\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\nconst prettifyError = __webpack_require__(/*! ./prettify-error */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\")\n\n/**\n * @typedef {object} PrettifyObjectParams\n * @property {object} log The object to prettify.\n * @property {boolean} [excludeLoggerKeys] Indicates if known logger specific\n * keys should be excluded from prettification. Default: `true`.\n * @property {string[]} [skipKeys] A set of object keys to exclude from the\n *  * prettified result. Default: `[]`.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a standard object. Special care is taken when processing the object\n * to handle child objects that are attached to keys known to contain error\n * objects.\n *\n * @param {PrettifyObjectParams} input\n *\n * @returns {string} The prettified string. This can be as little as `''` if\n * there was nothing to prettify.\n */\nfunction prettifyObject ({\n  log,\n  excludeLoggerKeys = true,\n  skipKeys = [],\n  context\n}) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    customPrettifiers,\n    errorLikeObjectKeys: errorLikeKeys,\n    objectColorizer,\n    singleLine,\n    colorizer\n  } = context\n  const keysToIgnore = [].concat(skipKeys)\n\n  /* istanbul ignore else */\n  if (excludeLoggerKeys === true) Array.prototype.push.apply(keysToIgnore, LOGGER_KEYS)\n\n  let result = ''\n\n  // Split object keys into two categories: error and non-error\n  const { plain, errors } = Object.entries(log).reduce(({ plain, errors }, [k, v]) => {\n    if (keysToIgnore.includes(k) === false) {\n      // Pre-apply custom prettifiers, because all 3 cases below will need this\n      const pretty = typeof customPrettifiers[k] === 'function'\n        ? customPrettifiers[k](v, k, log, { colors: colorizer.colors })\n        : v\n      if (errorLikeKeys.includes(k)) {\n        errors[k] = pretty\n      } else {\n        plain[k] = pretty\n      }\n    }\n    return { plain, errors }\n  }, { plain: {}, errors: {} })\n\n  if (singleLine) {\n    // Stringify the entire object as a single JSON line\n    /* istanbul ignore else */\n    if (Object.keys(plain).length > 0) {\n      result += objectColorizer.greyMessage(stringifySafe(plain))\n    }\n    result += eol\n    // Avoid printing the escape character on escaped backslashes.\n    result = result.replace(/\\\\\\\\/gi, '\\\\')\n  } else {\n    // Put each object entry on its own line\n    Object.entries(plain).forEach(([keyName, keyValue]) => {\n      // custom prettifiers are already applied above, so we can skip it now\n      let lines = typeof customPrettifiers[keyName] === 'function'\n        ? keyValue\n        : stringifySafe(keyValue, null, 2)\n\n      if (lines === undefined) return\n\n      // Avoid printing the escape character on escaped backslashes.\n      lines = lines.replace(/\\\\\\\\/gi, '\\\\')\n\n      const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n      result += `${ident}${keyName}:${joinedLines.startsWith(eol) ? '' : ' '}${joinedLines}${eol}`\n    })\n  }\n\n  // Errors\n  Object.entries(errors).forEach(([keyName, keyValue]) => {\n    // custom prettifiers are already applied above, so we can skip it now\n    const lines = typeof customPrettifiers[keyName] === 'function'\n      ? keyValue\n      : stringifySafe(keyValue, null, 2)\n\n    if (lines === undefined) return\n\n    result += prettifyError({ keyName, lines, eol, ident })\n  })\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW9iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsdUVBQWM7O0FBRTFCLHNCQUFzQixtQkFBTyxDQUFDLDhFQUFxQjtBQUNuRCxpQ0FBaUMsbUJBQU8sQ0FBQyxnSEFBK0I7QUFDeEUsc0JBQXNCLG1CQUFPLENBQUMsc0ZBQWtCOztBQUVoRDtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0EsY0FBYyxlQUFlO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFVBQVUsZ0JBQWdCLGdDQUFnQyxlQUFlO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwQkFBMEI7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixHQUFHLElBQUksU0FBUyxjQUFjOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEscURBQXFELDBCQUEwQjtBQUMvRSxtQkFBbUIsTUFBTSxFQUFFLFFBQVEsR0FBRyx1Q0FBdUMsRUFBRSxZQUFZLEVBQUUsSUFBSTtBQUNqRyxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLDhCQUE4Qiw0QkFBNEI7QUFDMUQsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamFzb25jL0Rlc2t0b3AvRWlnZW5Qcm90ZWN0ZWRBVlNIb29rL2VpZ2VuLXByb3RlY3RlZC1hdnMtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9wcmV0dGlmeS1vYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcHJldHRpZnlPYmplY3RcblxuY29uc3Qge1xuICBMT0dHRVJfS0VZU1xufSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpXG5cbmNvbnN0IHN0cmluZ2lmeVNhZmUgPSByZXF1aXJlKCdmYXN0LXNhZmUtc3RyaW5naWZ5JylcbmNvbnN0IGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbiA9IHJlcXVpcmUoJy4vam9pbi1saW5lcy13aXRoLWluZGVudGF0aW9uJylcbmNvbnN0IHByZXR0aWZ5RXJyb3IgPSByZXF1aXJlKCcuL3ByZXR0aWZ5LWVycm9yJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeU9iamVjdFBhcmFtc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGxvZyBUaGUgb2JqZWN0IHRvIHByZXR0aWZ5LlxuICogQHByb3BlcnR5IHtib29sZWFufSBbZXhjbHVkZUxvZ2dlcktleXNdIEluZGljYXRlcyBpZiBrbm93biBsb2dnZXIgc3BlY2lmaWNcbiAqIGtleXMgc2hvdWxkIGJlIGV4Y2x1ZGVkIGZyb20gcHJldHRpZmljYXRpb24uIERlZmF1bHQ6IGB0cnVlYC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IFtza2lwS2V5c10gQSBzZXQgb2Ygb2JqZWN0IGtleXMgdG8gZXhjbHVkZSBmcm9tIHRoZVxuICogICogcHJldHRpZmllZCByZXN1bHQuIERlZmF1bHQ6IGBbXWAuXG4gKiBAcHJvcGVydHkge1ByZXR0eUNvbnRleHR9IGNvbnRleHQgVGhlIGNvbnRleHQgb2JqZWN0IGJ1aWx0IGZyb20gcGFyc2luZ1xuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV0dGlmaWVzIGEgc3RhbmRhcmQgb2JqZWN0LiBTcGVjaWFsIGNhcmUgaXMgdGFrZW4gd2hlbiBwcm9jZXNzaW5nIHRoZSBvYmplY3RcbiAqIHRvIGhhbmRsZSBjaGlsZCBvYmplY3RzIHRoYXQgYXJlIGF0dGFjaGVkIHRvIGtleXMga25vd24gdG8gY29udGFpbiBlcnJvclxuICogb2JqZWN0cy5cbiAqXG4gKiBAcGFyYW0ge1ByZXR0aWZ5T2JqZWN0UGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBwcmV0dGlmaWVkIHN0cmluZy4gVGhpcyBjYW4gYmUgYXMgbGl0dGxlIGFzIGAnJ2AgaWZcbiAqIHRoZXJlIHdhcyBub3RoaW5nIHRvIHByZXR0aWZ5LlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeU9iamVjdCAoe1xuICBsb2csXG4gIGV4Y2x1ZGVMb2dnZXJLZXlzID0gdHJ1ZSxcbiAgc2tpcEtleXMgPSBbXSxcbiAgY29udGV4dFxufSkge1xuICBjb25zdCB7XG4gICAgRU9MOiBlb2wsXG4gICAgSURFTlQ6IGlkZW50LFxuICAgIGN1c3RvbVByZXR0aWZpZXJzLFxuICAgIGVycm9yTGlrZU9iamVjdEtleXM6IGVycm9yTGlrZUtleXMsXG4gICAgb2JqZWN0Q29sb3JpemVyLFxuICAgIHNpbmdsZUxpbmUsXG4gICAgY29sb3JpemVyXG4gIH0gPSBjb250ZXh0XG4gIGNvbnN0IGtleXNUb0lnbm9yZSA9IFtdLmNvbmNhdChza2lwS2V5cylcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoZXhjbHVkZUxvZ2dlcktleXMgPT09IHRydWUpIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGtleXNUb0lnbm9yZSwgTE9HR0VSX0tFWVMpXG5cbiAgbGV0IHJlc3VsdCA9ICcnXG5cbiAgLy8gU3BsaXQgb2JqZWN0IGtleXMgaW50byB0d28gY2F0ZWdvcmllczogZXJyb3IgYW5kIG5vbi1lcnJvclxuICBjb25zdCB7IHBsYWluLCBlcnJvcnMgfSA9IE9iamVjdC5lbnRyaWVzKGxvZykucmVkdWNlKCh7IHBsYWluLCBlcnJvcnMgfSwgW2ssIHZdKSA9PiB7XG4gICAgaWYgKGtleXNUb0lnbm9yZS5pbmNsdWRlcyhrKSA9PT0gZmFsc2UpIHtcbiAgICAgIC8vIFByZS1hcHBseSBjdXN0b20gcHJldHRpZmllcnMsIGJlY2F1c2UgYWxsIDMgY2FzZXMgYmVsb3cgd2lsbCBuZWVkIHRoaXNcbiAgICAgIGNvbnN0IHByZXR0eSA9IHR5cGVvZiBjdXN0b21QcmV0dGlmaWVyc1trXSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IGN1c3RvbVByZXR0aWZpZXJzW2tdKHYsIGssIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgICAgOiB2XG4gICAgICBpZiAoZXJyb3JMaWtlS2V5cy5pbmNsdWRlcyhrKSkge1xuICAgICAgICBlcnJvcnNba10gPSBwcmV0dHlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBsYWluW2tdID0gcHJldHR5XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHBsYWluLCBlcnJvcnMgfVxuICB9LCB7IHBsYWluOiB7fSwgZXJyb3JzOiB7fSB9KVxuXG4gIGlmIChzaW5nbGVMaW5lKSB7XG4gICAgLy8gU3RyaW5naWZ5IHRoZSBlbnRpcmUgb2JqZWN0IGFzIGEgc2luZ2xlIEpTT04gbGluZVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKE9iamVjdC5rZXlzKHBsYWluKS5sZW5ndGggPiAwKSB7XG4gICAgICByZXN1bHQgKz0gb2JqZWN0Q29sb3JpemVyLmdyZXlNZXNzYWdlKHN0cmluZ2lmeVNhZmUocGxhaW4pKVxuICAgIH1cbiAgICByZXN1bHQgKz0gZW9sXG4gICAgLy8gQXZvaWQgcHJpbnRpbmcgdGhlIGVzY2FwZSBjaGFyYWN0ZXIgb24gZXNjYXBlZCBiYWNrc2xhc2hlcy5cbiAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFxcXFxcXFwvZ2ksICdcXFxcJylcbiAgfSBlbHNlIHtcbiAgICAvLyBQdXQgZWFjaCBvYmplY3QgZW50cnkgb24gaXRzIG93biBsaW5lXG4gICAgT2JqZWN0LmVudHJpZXMocGxhaW4pLmZvckVhY2goKFtrZXlOYW1lLCBrZXlWYWx1ZV0pID0+IHtcbiAgICAgIC8vIGN1c3RvbSBwcmV0dGlmaWVycyBhcmUgYWxyZWFkeSBhcHBsaWVkIGFib3ZlLCBzbyB3ZSBjYW4gc2tpcCBpdCBub3dcbiAgICAgIGxldCBsaW5lcyA9IHR5cGVvZiBjdXN0b21QcmV0dGlmaWVyc1trZXlOYW1lXSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IGtleVZhbHVlXG4gICAgICAgIDogc3RyaW5naWZ5U2FmZShrZXlWYWx1ZSwgbnVsbCwgMilcblxuICAgICAgaWYgKGxpbmVzID09PSB1bmRlZmluZWQpIHJldHVyblxuXG4gICAgICAvLyBBdm9pZCBwcmludGluZyB0aGUgZXNjYXBlIGNoYXJhY3RlciBvbiBlc2NhcGVkIGJhY2tzbGFzaGVzLlxuICAgICAgbGluZXMgPSBsaW5lcy5yZXBsYWNlKC9cXFxcXFxcXC9naSwgJ1xcXFwnKVxuXG4gICAgICBjb25zdCBqb2luZWRMaW5lcyA9IGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbih7IGlucHV0OiBsaW5lcywgaWRlbnQsIGVvbCB9KVxuICAgICAgcmVzdWx0ICs9IGAke2lkZW50fSR7a2V5TmFtZX06JHtqb2luZWRMaW5lcy5zdGFydHNXaXRoKGVvbCkgPyAnJyA6ICcgJ30ke2pvaW5lZExpbmVzfSR7ZW9sfWBcbiAgICB9KVxuICB9XG5cbiAgLy8gRXJyb3JzXG4gIE9iamVjdC5lbnRyaWVzKGVycm9ycykuZm9yRWFjaCgoW2tleU5hbWUsIGtleVZhbHVlXSkgPT4ge1xuICAgIC8vIGN1c3RvbSBwcmV0dGlmaWVycyBhcmUgYWxyZWFkeSBhcHBsaWVkIGFib3ZlLCBzbyB3ZSBjYW4gc2tpcCBpdCBub3dcbiAgICBjb25zdCBsaW5lcyA9IHR5cGVvZiBjdXN0b21QcmV0dGlmaWVyc1trZXlOYW1lXSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgPyBrZXlWYWx1ZVxuICAgICAgOiBzdHJpbmdpZnlTYWZlKGtleVZhbHVlLCBudWxsLCAyKVxuXG4gICAgaWYgKGxpbmVzID09PSB1bmRlZmluZWQpIHJldHVyblxuXG4gICAgcmVzdWx0ICs9IHByZXR0aWZ5RXJyb3IoeyBrZXlOYW1lLCBsaW5lcywgZW9sLCBpZGVudCB9KVxuICB9KVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js":
/*!*************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-time.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyTime\n\nconst formatTime = __webpack_require__(/*! ./format-time */ \"(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\")\n\n/**\n * @typedef {object} PrettifyTimeParams\n * @property {object} log The log object with the timestamp to be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a timestamp if the given `log` has either `time`, `timestamp` or custom specified timestamp\n * property.\n *\n * @param {PrettifyTimeParams} input\n *\n * @returns {undefined|string} If a timestamp property cannot be found then\n * `undefined` is returned. Otherwise, the prettified time is returned as a\n * string.\n */\nfunction prettifyTime ({ log, context }) {\n  const {\n    timestampKey,\n    translateTime: translateFormat\n  } = context\n  const prettifier = context.customPrettifiers?.time\n  let time = null\n\n  if (timestampKey in log) {\n    time = log[timestampKey]\n  } else if ('timestamp' in log) {\n    time = log.timestamp\n  }\n\n  if (time === null) return undefined\n  const output = translateFormat ? formatTime(time, translateFormat) : time\n\n  return prettifier ? prettifier(output) : `[${output}]`\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LXRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsZ0ZBQWU7O0FBRTFDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QixjQUFjLGVBQWU7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGNBQWM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0NBQStDLE9BQU87QUFDdEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LXRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcHJldHRpZnlUaW1lXG5cbmNvbnN0IGZvcm1hdFRpbWUgPSByZXF1aXJlKCcuL2Zvcm1hdC10aW1lJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeVRpbWVQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3Qgd2l0aCB0aGUgdGltZXN0YW1wIHRvIGJlIHByZXR0aWZpZWQuXG4gKiBAcHJvcGVydHkge1ByZXR0eUNvbnRleHR9IGNvbnRleHQgVGhlIGNvbnRleHQgb2JqZWN0IGJ1aWx0IGZyb20gcGFyc2luZ1xuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV0dGlmaWVzIGEgdGltZXN0YW1wIGlmIHRoZSBnaXZlbiBgbG9nYCBoYXMgZWl0aGVyIGB0aW1lYCwgYHRpbWVzdGFtcGAgb3IgY3VzdG9tIHNwZWNpZmllZCB0aW1lc3RhbXBcbiAqIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7UHJldHRpZnlUaW1lUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR8c3RyaW5nfSBJZiBhIHRpbWVzdGFtcCBwcm9wZXJ0eSBjYW5ub3QgYmUgZm91bmQgdGhlblxuICogYHVuZGVmaW5lZGAgaXMgcmV0dXJuZWQuIE90aGVyd2lzZSwgdGhlIHByZXR0aWZpZWQgdGltZSBpcyByZXR1cm5lZCBhcyBhXG4gKiBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIHByZXR0aWZ5VGltZSAoeyBsb2csIGNvbnRleHQgfSkge1xuICBjb25zdCB7XG4gICAgdGltZXN0YW1wS2V5LFxuICAgIHRyYW5zbGF0ZVRpbWU6IHRyYW5zbGF0ZUZvcm1hdFxuICB9ID0gY29udGV4dFxuICBjb25zdCBwcmV0dGlmaWVyID0gY29udGV4dC5jdXN0b21QcmV0dGlmaWVycz8udGltZVxuICBsZXQgdGltZSA9IG51bGxcblxuICBpZiAodGltZXN0YW1wS2V5IGluIGxvZykge1xuICAgIHRpbWUgPSBsb2dbdGltZXN0YW1wS2V5XVxuICB9IGVsc2UgaWYgKCd0aW1lc3RhbXAnIGluIGxvZykge1xuICAgIHRpbWUgPSBsb2cudGltZXN0YW1wXG4gIH1cblxuICBpZiAodGltZSA9PT0gbnVsbCkgcmV0dXJuIHVuZGVmaW5lZFxuICBjb25zdCBvdXRwdXQgPSB0cmFuc2xhdGVGb3JtYXQgPyBmb3JtYXRUaW1lKHRpbWUsIHRyYW5zbGF0ZUZvcm1hdCkgOiB0aW1lXG5cbiAgcmV0dXJuIHByZXR0aWZpZXIgPyBwcmV0dGlmaWVyKG91dHB1dCkgOiBgWyR7b3V0cHV0fV1gXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/split-property-key.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = splitPropertyKey\n\n/**\n * Splits the property key delimited by a dot character but not when it is preceded\n * by a backslash.\n *\n * @param {string} key A string identifying the property.\n *\n * @returns {string[]} Returns a list of string containing each delimited property.\n * e.g. `'prop2\\.domain\\.corp.prop2'` should return [ 'prop2.domain.com', 'prop2' ]\n */\nfunction splitPropertyKey (key) {\n  const result = []\n  let backslash = false\n  let segment = ''\n\n  for (let i = 0; i < key.length; i++) {\n    const c = key.charAt(i)\n\n    if (c === '\\\\') {\n      backslash = true\n      continue\n    }\n\n    if (backslash) {\n      backslash = false\n      segment += c\n      continue\n    }\n\n    /* Non-escaped dot, push to result */\n    if (c === '.') {\n      result.push(segment)\n      segment = ''\n      continue\n    }\n\n    segment += c\n  }\n\n  /* Push last entry to result */\n  if (segment.length) {\n    result.push(segment)\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3NwbGl0LXByb3BlcnR5LWtleS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLGdCQUFnQjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbmMvRGVza3RvcC9FaWdlblByb3RlY3RlZEFWU0hvb2svZWlnZW4tcHJvdGVjdGVkLWF2cy1mcm9udGVuZC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3NwbGl0LXByb3BlcnR5LWtleS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzcGxpdFByb3BlcnR5S2V5XG5cbi8qKlxuICogU3BsaXRzIHRoZSBwcm9wZXJ0eSBrZXkgZGVsaW1pdGVkIGJ5IGEgZG90IGNoYXJhY3RlciBidXQgbm90IHdoZW4gaXQgaXMgcHJlY2VkZWRcbiAqIGJ5IGEgYmFja3NsYXNoLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgQSBzdHJpbmcgaWRlbnRpZnlpbmcgdGhlIHByb3BlcnR5LlxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmdbXX0gUmV0dXJucyBhIGxpc3Qgb2Ygc3RyaW5nIGNvbnRhaW5pbmcgZWFjaCBkZWxpbWl0ZWQgcHJvcGVydHkuXG4gKiBlLmcuIGAncHJvcDJcXC5kb21haW5cXC5jb3JwLnByb3AyJ2Agc2hvdWxkIHJldHVybiBbICdwcm9wMi5kb21haW4uY29tJywgJ3Byb3AyJyBdXG4gKi9cbmZ1bmN0aW9uIHNwbGl0UHJvcGVydHlLZXkgKGtleSkge1xuICBjb25zdCByZXN1bHQgPSBbXVxuICBsZXQgYmFja3NsYXNoID0gZmFsc2VcbiAgbGV0IHNlZ21lbnQgPSAnJ1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwga2V5Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYyA9IGtleS5jaGFyQXQoaSlcblxuICAgIGlmIChjID09PSAnXFxcXCcpIHtcbiAgICAgIGJhY2tzbGFzaCA9IHRydWVcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgaWYgKGJhY2tzbGFzaCkge1xuICAgICAgYmFja3NsYXNoID0gZmFsc2VcbiAgICAgIHNlZ21lbnQgKz0gY1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICAvKiBOb24tZXNjYXBlZCBkb3QsIHB1c2ggdG8gcmVzdWx0ICovXG4gICAgaWYgKGMgPT09ICcuJykge1xuICAgICAgcmVzdWx0LnB1c2goc2VnbWVudClcbiAgICAgIHNlZ21lbnQgPSAnJ1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBzZWdtZW50ICs9IGNcbiAgfVxuXG4gIC8qIFB1c2ggbGFzdCBlbnRyeSB0byByZXN1bHQgKi9cbiAgaWYgKHNlZ21lbnQubGVuZ3RoKSB7XG4gICAgcmVzdWx0LnB1c2goc2VnbWVudClcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\n");

/***/ })

};
;